cmake_minimum_required(VERSION 2.8.9)
project(correlation)
set(CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR})
find_package(Eigen3 REQUIRED)
include_directories(${EIGEN3_INCLUDE_DIR})
FIND_PACKAGE(GSL REQUIRED)
include_directories(${GSL_INCLUDE_DIRS} ${GSLCBLAS_INCLUDE_DIRS})
find_package(OpenMP)
if (OPENMP_FOUND)
    set (CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}")
    set (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
endif()
#set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -pedantic -Wextra -Weffc++")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -pedantic -Wextra")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -msse4.2 -ffast-math -ftree-vectorize -funroll-loops")
# add_definitions(-DDEBUG)
add_library(correlation correlation.hpp correlation.cpp graycode.hpp graycode.cpp)
add_executable(correlation_main correlation_main.cpp correlation.hpp)
add_executable(ExampleUScrime ExampleUScrime_main.cpp correlation.hpp)
target_link_libraries(correlation_main LINK_PUBLIC correlation)
target_link_libraries(ExampleUScrime LINK_PUBLIC correlation)
set_property(TARGET correlation PROPERTY CXX_STANDARD 14)
set_property(TARGET ExampleUScrime PROPERTY CXX_STANDARD 14)
