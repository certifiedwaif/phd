var_accuracy3 <- calculate_accuracies("application_biochemists", mult, mcmc_samples, fit3, "GVA inv param", plot_flag=TRUE)
var_accuracy4 <- calculate_accuracies("application_biochemists", mult, mcmc_samples, fit4, "GVA fixed point", plot_flag=TRUE)
mcmc_result <- mcmc(mult, p=2, iterations=1e4, warmup=1e3, mc.cores = 1,
stan_file="multivariate_zip_fixed.stan")
var_accuracy1 <- calculate_accuracies("application_biochemists", mult, mcmc_samples, fit1, "laplace", plot_flag=TRUE)
var_accuracy2 <- calculate_accuracies("application_biochemists", mult, mcmc_samples, fit2, "GVA", plot_flag=TRUE)
var_accuracy3 <- calculate_accuracies("application_biochemists", mult, mcmc_samples, fit3, "GVA inv param", plot_flag=TRUE)
var_accuracy4 <- calculate_accuracies("application_biochemists", mult, mcmc_samples, fit4, "GVA fixed point", plot_flag=TRUE)
mcmc_result <- mcmc(mult, p=2, iterations=1e4, warmup=1e3, mc.cores = 1,
stan_file="multivariate_zip_fixed.stan")
var_accuracy1 <- calculate_accuracies("application_biochemists", mult, mcmc_samples, fit1, "laplace", plot_flag=TRUE)
var_accuracy2 <- calculate_accuracies("application_biochemists", mult, mcmc_samples, fit2, "GVA", plot_flag=TRUE)
var_accuracy3 <- calculate_accuracies("application_biochemists", mult, mcmc_samples, fit3, "GVA inv param", plot_flag=TRUE)
var_accuracy4 <- calculate_accuracies("application_biochemists", mult, mcmc_samples, fit4, "GVA fixed point", plot_flag=TRUE)
mcmc_result <- mcmc(mult, p=2, iterations=1e4, warmup=1e3, mc.cores = 1,
stan_file="multivariate_zip_fixed.stan")
mcmc_samples <- mcmc_result$mcmc_samples
fit <- mcmc_result$fit
var_accuracy1 <- calculate_accuracies("application_biochemists", mult, mcmc_samples, fit1, "laplace", plot_flag=TRUE)
var_accuracy2 <- calculate_accuracies("application_biochemists", mult, mcmc_samples, fit2, "GVA", plot_flag=TRUE)
var_accuracy3 <- calculate_accuracies("application_biochemists", mult, mcmc_samples, fit3, "GVA inv param", plot_flag=TRUE)
var_accuracy4 <- calculate_accuracies("application_biochemists", mult, mcmc_samples, fit4, "GVA fixed point", plot_flag=TRUE)
mcmc_result <- mcmc(mult, p=2, iterations=1e4, warmup=1e3, mc.cores = 1,
stan_file="multivariate_zip_fixed.stan")
mcmc_samples <- mcmc_result$mcmc_samples
fit <- mcmc_result$fit
var_accuracy1 <- calculate_accuracies("application_biochemists", mult, mcmc_samples, fit1, "laplace", plot_flag=TRUE)
var_accuracy2 <- calculate_accuracies("application_biochemists", mult, mcmc_samples, fit2, "GVA", plot_flag=TRUE)
var_accuracy3 <- calculate_accuracies("application_biochemists", mult, mcmc_samples, fit3, "GVA inv param", plot_flag=TRUE)
var_accuracy4 <- calculate_accuracies("application_biochemists", mult, mcmc_samples, fit4, "GVA fixed point", plot_flag=TRUE)
vy
table(vy)
mean(vy)
dpois(0, 1.69)
vy / sum(vy)
hist(vy, prob=TRUE)
hist(vy, prob=TRUE, breaks=20)
hist(vy, prob=TRUE, breaks=30)
remove.package("rstan")
remove.packages("rstan")
install.packages("rstan", version="1.0.0")
install.packages("rstan", version = "1.0.0")
?install.packages
library(devtools)
install._version("rstan", version = "1.0.0")
install_version("rstan", version = "1.0.0")
install_version("rstan", version = "2.7.0-1")
install_version("rstan", version = "2.8.0")
install_version("rstan", version = "2.9.0")
install.packages("rstan")
bioChemists <- bioChemists[bioChemists$art != 0, ]
library(pscl)
bioChemists <- bioChemists[bioChemists$art != 0, ]
matrix_bioChemists <- model.matrix(art~fem, data=bioChemists)
vy <- bioChemists$art
mZ <- NULL
mX <- matrix_bioChemists[, 1:2]
mult <- create_mult(vy, mX, mZ, 1e5, mPsi=NULL, m=0, blocksize=1, v=2)
library(zipvb)
source("accuracy.R")
setwd("~/Dropbox/phd/code/")
library(pscl)
bioChemists <- bioChemists[bioChemists$art != 0, ]
matrix_bioChemists <- model.matrix(art~fem, data=bioChemists)
vy <- bioChemists$art
mZ <- NULL
mX <- matrix_bioChemists[, 1:2]
mult <- create_mult(vy, mX, mZ, 1e5, mPsi=NULL, m=0, blocksize=1, v=2)
options(safe_exp=FALSE)
options(threshold=2)
fit1 <- zipvb(mult, method="laplace", verbose=TRUE, glm_init=TRUE)
fit2 <- zipvb(mult, method="gva", verbose=TRUE, glm_init=TRUE)
fit3 <- zipvb(mult, method="gva2", verbose=TRUE, glm_init=FALSE)
fit4 <- zipvb(mult, method="gva_nr", verbose=TRUE, glm_init=TRUE)
mcmc_result <- mcmc(mult, p=2, iterations=1e4, warmup=1e3, mc.cores = 1,
stan_file="multivariate_zip_fixed.stan")
mcmc_samples <- mcmc_result$mcmc_samples
fit <- mcmc_result$fit
library(zipvb)
source("accuracy.R")
setwd("~/Dropbox/phd/code/")
library(pscl)
bioChemists <- bioChemists[bioChemists$art != 0, ]
matrix_bioChemists <- model.matrix(art~fem, data=bioChemists)
vy <- bioChemists$art
mZ <- NULL
mX <- matrix_bioChemists[, 1:2]
mult <- create_mult(vy, mX, mZ, 1e5, mPsi=NULL, m=0, blocksize=1, v=2)
options(safe_exp=FALSE)
options(threshold=2)
fit1 <- zipvb(mult, method="laplace", verbose=TRUE, glm_init=TRUE)
fit2 <- zipvb(mult, method="gva", verbose=TRUE, glm_init=TRUE)
fit3 <- zipvb(mult, method="gva2", verbose=TRUE, glm_init=FALSE)
fit4 <- zipvb(mult, method="gva_nr", verbose=TRUE, glm_init=TRUE)
mcmc_result <- mcmc(mult, p=2, iterations=1e4, warmup=1e3, mc.cores = 1,
stan_file="multivariate_zip_fixed.stan")
remove.packages("rstan")
rm(fit)
install.packages("rstan")
install.packages("rstan")
library(zipvb)
source("accuracy.R")
setwd("~/Dropbox/phd/code/")
library(pscl)
bioChemists <- bioChemists[bioChemists$art != 0, ]
matrix_bioChemists <- model.matrix(art~fem, data=bioChemists)
vy <- bioChemists$art
mZ <- NULL
mX <- matrix_bioChemists[, 1:2]
mult <- create_mult(vy, mX, mZ, 1e5, mPsi=NULL, m=0, blocksize=1, v=2)
options(safe_exp=FALSE)
options(threshold=2)
fit1 <- zipvb(mult, method="laplace", verbose=TRUE, glm_init=TRUE)
fit2 <- zipvb(mult, method="gva", verbose=TRUE, glm_init=TRUE)
fit3 <- zipvb(mult, method="gva2", verbose=TRUE, glm_init=FALSE)
fit4 <- zipvb(mult, method="gva_nr", verbose=TRUE, glm_init=TRUE)
save <- FALSE
mcmc_result <- mcmc(mult, p=2, iterations=1e4, warmup=1e3, mc.cores = 1,
stan_file="multivariate_zip_fixed.stan")
mcmc_samples <- mcmc_result$mcmc_samples
fit <- mcmc_result$fit
var_accuracy1 <- calculate_accuracies("application_biochemists", mult, mcmc_samples, fit1, "laplace", plot_flag=TRUE)
var_accuracy2 <- calculate_accuracies("application_biochemists", mult, mcmc_samples, fit2, "GVA", plot_flag=TRUE)
var_accuracy3 <- calculate_accuracies("application_biochemists", mult, mcmc_samples, fit3, "GVA inv param", plot_flag=TRUE)
var_accuracy4 <- calculate_accuracies("application_biochemists", mult, mcmc_samples, fit4, "GVA fixed point", plot_flag=TRUE)
bioChemists$art == 0
which(bioChemists$art == 0)
library(pscl)
which(pscl::bioChemists$art == 0)
dim(pscl::bioChemists)
bioChemists <- pscl::bioChemists[101:915, ]
matrix_bioChemists <- model.matrix(art~fem, data=bioChemists)
vy <- bioChemists$art
mZ <- NULL
mX <- matrix_bioChemists[, 1:2]
mult <- create_mult(vy, mX, mZ, 1e5, mPsi=NULL, m=0, blocksize=1, v=2)
options(safe_exp=FALSE)
options(threshold=2)
fit1 <- zipvb(mult, method="laplace", verbose=TRUE, glm_init=TRUE)
fit2 <- zipvb(mult, method="gva", verbose=TRUE, glm_init=TRUE)
fit3 <- zipvb(mult, method="gva2", verbose=TRUE, glm_init=FALSE)
fit4 <- zipvb(mult, method="gva_nr", verbose=TRUE, glm_init=TRUE)
mcmc_result <- mcmc(mult, p=2, iterations=1e4, warmup=1e3, mc.cores = 1,
stan_file="multivariate_zip_fixed.stan")
mcmc_samples <- mcmc_result$mcmc_samples
fit <- mcmc_result$fit
var_accuracy1 <- calculate_accuracies("application_biochemists", mult, mcmc_samples, fit1, "laplace", plot_flag=TRUE)
var_accuracy2 <- calculate_accuracies("application_biochemists", mult, mcmc_samples, fit2, "GVA", plot_flag=TRUE)
var_accuracy3 <- calculate_accuracies("application_biochemists", mult, mcmc_samples, fit3, "GVA inv param", plot_flag=TRUE)
var_accuracy4 <- calculate_accuracies("application_biochemists", mult, mcmc_samples, fit4, "GVA fixed point", plot_flag=TRUE)
bioChemists <- pscl::bioChemists[1:915, ]
matrix_bioChemists <- model.matrix(art~fem, data=bioChemists)
vy <- bioChemists$art
mZ <- NULL
mX <- matrix_bioChemists[, 1:2]
mult <- create_mult(vy, mX, mZ, 1e5, mPsi=NULL, m=0, blocksize=1, v=2)
options(safe_exp=FALSE)
options(threshold=2)
fit1 <- zipvb(mult, method="laplace", verbose=TRUE, glm_init=TRUE)
fit2 <- zipvb(mult, method="gva", verbose=TRUE, glm_init=TRUE)
fit3 <- zipvb(mult, method="gva2", verbose=TRUE, glm_init=FALSE)
fit4 <- zipvb(mult, method="gva_nr", verbose=TRUE, glm_init=TRUE)
bioChemists <- bioChemists[bioChemists$art != 0, ]
matrix_bioChemists <- model.matrix(art~fem, data=bioChemists)
vy <- bioChemists$art
mZ <- NULL
mX <- matrix_bioChemists[, 1:2]
mult <- create_mult(vy, mX, mZ, 1e5, mPsi=NULL, m=0, blocksize=1, v=2)
options(safe_exp=FALSE)
options(threshold=2)
fit1 <- zipvb(mult, method="laplace", verbose=TRUE, glm_init=TRUE)
fit2 <- zipvb(mult, method="gva", verbose=TRUE, glm_init=TRUE)
fit3 <- zipvb(mult, method="gva2", verbose=TRUE, glm_init=FALSE)
fit4 <- zipvb(mult, method="gva_nr", verbose=TRUE, glm_init=TRUE)
mcmc_result <- mcmc(mult, p=2, iterations=1e4, warmup=1e3, mc.cores = 1,
stan_file="multivariate_zip_fixed.stan")
mcmc_samples <- mcmc_result$mcmc_samples
fit <- mcmc_result$fit
var_accuracy1 <- calculate_accuracies("application_biochemists", mult, mcmc_samples, fit1, "laplace", plot_flag=TRUE)
var_accuracy2 <- calculate_accuracies("application_biochemists", mult, mcmc_samples, fit2, "GVA", plot_flag=TRUE)
var_accuracy3 <- calculate_accuracies("application_biochemists", mult, mcmc_samples, fit3, "GVA inv param", plot_flag=TRUE)
var_accuracy4 <- calculate_accuracies("application_biochemists", mult, mcmc_samples, fit4, "GVA fixed point", plot_flag=TRUE)
library(zipvb)
source("accuracy.R")
setwd("~/Dropbox/phd/code/")
library(pscl)
bioChemists <- pscl::bioChemists[1:915, ]
matrix_bioChemists <- model.matrix(art~fem, data=bioChemists)
vy <- bioChemists$art
mZ <- NULL
mX <- matrix_bioChemists[, 1:2]
mult <- create_mult(vy, mX, mZ, 1e5, mPsi=NULL, m=0, blocksize=1, v=2)
options(safe_exp=FALSE)
options(threshold=2)
fit1 <- zipvb(mult, method="laplace", verbose=TRUE, glm_init=TRUE)
fit2 <- zipvb(mult, method="gva", verbose=TRUE, glm_init=TRUE)
fit3 <- zipvb(mult, method="gva2", verbose=TRUE, glm_init=FALSE)
fit4 <- zipvb(mult, method="gva_nr", verbose=TRUE, glm_init=TRUE)
mcmc_result <- mcmc(mult, p=2, iterations=1e4, warmup=1e3, mc.cores = 1,
stan_file="multivariate_zip_fixed.stan")
mcmc_samples <- mcmc_result$mcmc_samples
fit <- mcmc_result$fit
var_accuracy1 <- calculate_accuracies("application_biochemists", mult, mcmc_samples, fit1, "laplace", plot_flag=TRUE)
var_accuracy2 <- calculate_accuracies("application_biochemists", mult, mcmc_samples, fit2, "GVA", plot_flag=TRUE)
var_accuracy3 <- calculate_accuracies("application_biochemists", mult, mcmc_samples, fit3, "GVA inv param", plot_flag=TRUE)
var_accuracy4 <- calculate_accuracies("application_biochemists", mult, mcmc_samples, fit4, "GVA fixed point", plot_flag=TRUE)
mcmc_result <- mcmc(mult, p=2, iterations=1e4, warmup=1e3, mc.cores = 1,
stan_file="multivariate_zip_fixed.stan")
mcmc_samples <- mcmc_result$mcmc_samples
fit <- mcmc_result$fit
apply(mcmc_samples$vbeta, 2, mean)
var_accuracy1 <- calculate_accuracies("application_biochemists", mult, mcmc_samples, fit1, "laplace", plot_flag=TRUE)
var_accuracy2 <- calculate_accuracies("application_biochemists", mult, mcmc_samples, fit2, "GVA", plot_flag=TRUE)
var_accuracy3 <- calculate_accuracies("application_biochemists", mult, mcmc_samples, fit3, "GVA inv param", plot_flag=TRUE)
var_accuracy4 <- calculate_accuracies("application_biochemists", mult, mcmc_samples, fit4, "GVA fixed point", plot_flag=TRUE)
mcmc_result <- mcmc(mult, p=2, iterations=1e4, warmup=1e3, mc.cores = 1,
stan_file="multivariate_zip_fixed.stan")
mcmc_samples <- mcmc_result$mcmc_samples
fit <- mcmc_result$fit
var_accuracy1 <- calculate_accuracies("application_biochemists", mult, mcmc_samples, fit1, "laplace", plot_flag=TRUE)
var_accuracy2 <- calculate_accuracies("application_biochemists", mult, mcmc_samples, fit2, "GVA", plot_flag=TRUE)
var_accuracy3 <- calculate_accuracies("application_biochemists", mult, mcmc_samples, fit3, "GVA inv param", plot_flag=TRUE)
var_accuracy4 <- calculate_accuracies("application_biochemists", mult, mcmc_samples, fit4, "GVA fixed point", plot_flag=TRUE)
mcmc_result <- mcmc(mult, p=2, iterations=1e4, warmup=1e3, mc.cores = 1,
stan_file="multivariate_zip_fixed.stan")
mcmc_samples <- mcmc_result$mcmc_samples
fit <- mcmc_result$fit
var_accuracy1 <- calculate_accuracies("application_biochemists", mult, mcmc_samples, fit1, "laplace", plot_flag=TRUE)
var_accuracy2 <- calculate_accuracies("application_biochemists", mult, mcmc_samples, fit2, "GVA", plot_flag=TRUE)
var_accuracy3 <- calculate_accuracies("application_biochemists", mult, mcmc_samples, fit3, "GVA inv param", plot_flag=TRUE)
var_accuracy4 <- calculate_accuracies("application_biochemists", mult, mcmc_samples, fit4, "GVA fixed point", plot_flag=TRUE)
head(bioChemists)
matrix_bioChemists <- model.matrix(art~fem+mar+kid5+phd+ment, data=bioChemists)
vy <- bioChemists$art
mZ <- NULL
mX <- matrix_bioChemists[, 1:6]
mult <- create_mult(vy, mX, mZ, 1e5, mPsi=NULL, m=0, blocksize=1, v=2)
options(safe_exp=FALSE)
options(threshold=2)
fit1 <- zipvb(mult, method="laplace", verbose=TRUE, glm_init=TRUE)
fit2 <- zipvb(mult, method="gva", verbose=TRUE, glm_init=TRUE)
fit3 <- zipvb(mult, method="gva2", verbose=TRUE, glm_init=TRUE)
fit4 <- zipvb(mult, method="gva_nr", verbose=TRUE, glm_init=TRUE)
round(dpois(1:19,mean(bioChemists$art)),2)
round(dpois(0:19,mean(bioChemists$art)),2)
mcmc_result <- mcmc(mult, p=6, iterations=1e4, warmup=1e3, mc.cores = 1,
stan_file="multivariate_zip_fixed.stan")
mcmc_samples <- mcmc_result$mcmc_samples
fit <- mcmc_result$fit
var_accuracy1 <- calculate_accuracies("application_biochemists", mult, mcmc_samples, fit1, "laplace", plot_flag=TRUE)
var_accuracy2 <- calculate_accuracies("application_biochemists", mult, mcmc_samples, fit2, "GVA", plot_flag=TRUE)
var_accuracy3 <- calculate_accuracies("application_biochemists", mult, mcmc_samples, fit3, "GVA inv param", plot_flag=TRUE)
var_accuracy4 <- calculate_accuracies("application_biochemists", mult, mcmc_samples, fit4, "GVA fixed point", plot_flag=TRUE)
fit1 <- zipvb(mult, method="laplace", verbose=TRUE, glm_init=TRUE)
fit2 <- zipvb(mult, method="gva", verbose=TRUE, glm_init=TRUE)
fit3 <- zipvb(mult, method="gva2", verbose=TRUE, glm_init=TRUE)
fit4 <- zipvb(mult, method="gva_nr", verbose=TRUE, glm_init=TRUE)
matrix_bioChemists <- model.matrix(art~fem+mar+kid5+phd, data=bioChemists)
vy <- bioChemists$art
mZ <- NULL
mX <- matrix_bioChemists[, 1:5]
mult <- create_mult(vy, mX, mZ, 1e5, mPsi=NULL, m=0, blocksize=1, v=2)
options(safe_exp=FALSE)
options(threshold=2)
fit1 <- zipvb(mult, method="laplace", verbose=TRUE, glm_init=TRUE)
fit2 <- zipvb(mult, method="gva", verbose=TRUE, glm_init=TRUE)
fit3 <- zipvb(mult, method="gva2", verbose=TRUE, glm_init=TRUE)
fit4 <- zipvb(mult, method="gva_nr", verbose=TRUE, glm_init=TRUE)
mcmc_result <- mcmc(mult, p=5, iterations=1e4, warmup=1e3, mc.cores = 1,
stan_file="multivariate_zip_fixed.stan")
mcmc_samples <- mcmc_result$mcmc_samples
fit <- mcmc_result$fit
var_accuracy1 <- calculate_accuracies("application_biochemists", mult, mcmc_samples, fit1, "laplace", plot_flag=TRUE)
var_accuracy1 <- calculate_accuracies("application_biochemists", mult, mcmc_samples, fit1, "laplace", plot_flag=TRUE)
var_accuracy2 <- calculate_accuracies("application_biochemists", mult, mcmc_samples, fit2, "GVA", plot_flag=TRUE)
var_accuracy3 <- calculate_accuracies("application_biochemists", mult, mcmc_samples, fit3, "GVA inv param", plot_flag=TRUE)
var_accuracy4 <- calculate_accuracies("application_biochemists", mult, mcmc_samples, fit4, "GVA fixed point", plot_flag=TRUE)
matrix_bioChemists <- model.matrix(art~fem+mar+kid5+phd+ment, data=bioChemists)
vy <- bioChemists$art
mZ <- NULL
mX <- matrix_bioChemists[, c(1:4, 6)]
mult <- create_mult(vy, mX, mZ, 1e5, mPsi=NULL, m=0, blocksize=1, v=2)
options(safe_exp=FALSE)
options(threshold=2)
fit1 <- zipvb(mult, method="laplace", verbose=TRUE, glm_init=TRUE)
fit2 <- zipvb(mult, method="gva", verbose=TRUE, glm_init=TRUE)
fit3 <- zipvb(mult, method="gva2", verbose=TRUE, glm_init=TRUE)
fit4 <- zipvb(mult, method="gva_nr", verbose=TRUE, glm_init=TRUE)
save <- FALSE
mcmc_result <- mcmc(mult, p=5, iterations=1e4, warmup=1e3, mc.cores = 1,
stan_file="multivariate_zip_fixed.stan")
mcmc_samples <- mcmc_result$mcmc_samples
fit <- mcmc_result$fit
var_accuracy1 <- calculate_accuracies("application_biochemists", mult, mcmc_samples, fit1, "laplace", plot_flag=TRUE)
var_accuracy2 <- calculate_accuracies("application_biochemists", mult, mcmc_samples, fit2, "GVA", plot_flag=TRUE)
var_accuracy3 <- calculate_accuracies("application_biochemists", mult, mcmc_samples, fit3, "GVA inv param", plot_flag=TRUE)
var_accuracy4 <- calculate_accuracies("application_biochemists", mult, mcmc_samples, fit4, "GVA fixed point", plot_flag=TRUE)
bioChemists <- pscl::bioChemists[1:915, ]
matrix_bioChemists <- model.matrix(art~fem+mar+kid5+phd+ment, data=bioChemists)
vy <- bioChemists$art
mZ <- NULL
mX <- matrix_bioChemists[, 1:5]
mult <- create_mult(vy, mX, mZ, 1e5, mPsi=NULL, m=0, blocksize=1, v=2)
options(safe_exp=FALSE)
options(threshold=2)
fit1 <- zipvb(mult, method="laplace", verbose=TRUE, glm_init=TRUE)
fit2 <- zipvb(mult, method="gva", verbose=TRUE, glm_init=TRUE)
fit3 <- zipvb(mult, method="gva2", verbose=TRUE, glm_init=TRUE)
fit4 <- zipvb(mult, method="gva_nr", verbose=TRUE, glm_init=TRUE)
mcmc_result <- mcmc(mult, p=5, iterations=1e6, warmup=1e5, mc.cores = 1,
stan_file="multivariate_zip_fixed.stan")
mcmc_result <- mcmc(mult, p=5, iterations=1e6, warmup=1e4, mc.cores = 1,
stan_file="multivariate_zip_fixed.stan")
mcmc_samples <- mcmc_result$mcmc_samples
fit <- mcmc_result$fit
var_accuracy1 <- calculate_accuracies("application_biochemists", mult, mcmc_samples, fit1, "laplace", plot_flag=TRUE)
var_accuracy2 <- calculate_accuracies("application_biochemists", mult, mcmc_samples, fit2, "GVA", plot_flag=TRUE)
var_accuracy3 <- calculate_accuracies("application_biochemists", mult, mcmc_samples, fit3, "GVA inv param", plot_flag=TRUE)
var_accuracy4 <- calculate_accuracies("application_biochemists", mult, mcmc_samples, fit4, "GVA fixed point", plot_flag=TRUE)
library(zipvb)
setwd("~/Dropbox/phd/code/")
source("accuracy.R")
library(sqldf)
roachdata <- read.csv(file="../ARM_Data/roaches/roachdata.csv")
RoachCounts <- read.csv(file="../ARM_Data/roaches/RoachCounts.csv")
IPM_BASELINE_R2 <- read.csv(file="../ARM_Data/roaches/IPM_BASELINE_R2.csv")
IPM_BASELINE_R2_032006 <- read.csv(file="../ARM_Data/roaches/IPM_BASELINE_R2.csv")
roaches <- cbind(RoachCounts, IPM_BASELINE_R2_032006)
# Must exclude entries where second observation is NA
# Get first five from each building.
roaches <- sqldf("select * from roaches where hasround2 = 1")
# roaches_new <- data.frame()
# for (building in 1:9) {
# 	roaches_new <- rbind(roaches_new, sqldf(sprintf("select * from roaches where building = %d limit 5", building)))
# }
# roaches <- roaches_new
# Convert from wide to long
roaches_long <- matrix(NA, nrow(roaches) * 2, 9)
colnames(roaches_long) <- c("time", "treatment", "senior", "building", "stories", "hasround2", "roachsum", "trapmiss", "trapdays")
roaches_long <- as.data.frame(roaches_long)
for (row_idx in 1:nrow(roaches)) {
roaches_long[row_idx * 2 - 1, "time"] <- 1
roaches_long[row_idx * 2 - 1, "roachsum"] <- roaches[row_idx, "roachsum1"]
roaches_long[row_idx * 2 - 1, "trapmiss"] <- roaches[row_idx, "trapmiss1"]
roaches_long[row_idx * 2 - 1, "trapdays"] <- roaches[row_idx, "trapdays1"]
roaches_long[row_idx * 2 - 1, 2:6] <- roaches[row_idx, 7:11]
roaches_long[row_idx * 2, "time"] <- 2
roaches_long[row_idx * 2, "roachsum"] <- roaches[row_idx, "roachsum2"]
roaches_long[row_idx * 2, "trapmiss"] <- roaches[row_idx, "trapmiss2"]
roaches_long[row_idx * 2, "trapdays"] <- roaches[row_idx, "trapdays2"]
roaches_long[row_idx * 2, 2:6] <- roaches[row_idx, 7:11]
}
fit <- glm(roachsum~time+treatment+senior, data=roaches_long, family=poisson())
summary(fit)
# Need to fix NAs
model_mat <- model.matrix(roachsum~time+time:treatment+senior+factor(building), data=roaches_long)
# Construct vy, mX, and mZ
#mX <- model.matrix(~time+time:treatment+senior, data=roaches_long)
mX <- model.matrix(~time+time:treatment, data=roaches_long)
mZ <- model.matrix(~factor(building), data=roaches_long)
mZ <- mZ[, 2:ncol(mZ)]
vy <- round(with(roaches_long, roachsum / trapdays))
mult <- create_mult(vy, mX, mZ, 1e5, m=13, blocksize=1, v=2)
kappa(mult$mC)
now <- Sys.time()
fit1 <- zipvb(mult, method="laplace", verbose=FALSE, glm_init=FALSE)
cat("Laplace", Sys.time() - now, "\n")
now <- Sys.time()
fit2 <- zipvb(mult, method="gva", verbose=FALSE, glm_init=FALSE)
cat("GVA", Sys.time() - now, "\n")
now <- Sys.time()
fit3 <- zipvb(mult, method="gva2", verbose=FALSE, glm_init=FALSE)
cat("GVA2", Sys.time() - now, "\n")
now <- Sys.time()
fit4 <- zipvb(mult, method="gva_nr", verbose=FALSE, glm_init=FALSE)
cat("GVA_NR", Sys.time() - now, "\n")
mcmc_result <- mcmc(mult, p=3, iterations=1e5, warmup=1e4, mc.cores = 1)
mcmc_samples <- mcmc_result$mcmc_samples
fit <- mcmc_result$fit
save(mult, mcmc_samples, fit, file="data/accuracy_application_2017_06_15.RData")
var_accuracy <- calculate_accuracies("application", mult, mcmc_samples, fit1, "Laplace", plot_flag=TRUE)
var_accuracy2 <- calculate_accuracies("application", mult, mcmc_samples, fit2, "GVA", plot_flag=TRUE)
var_accuracy3 <- calculate_accuracies("application", mult, mcmc_samples, fit3, "GVA", plot_flag=TRUE)
var_accuracy4 <- calculate_accuracies("application", mult, mcmc_samples, fit4, "GVA", plot_flag=TRUE)
var_accuracy3 <- calculate_accuracies("application", mult, mcmc_samples, fit3, "GVA2", plot_flag=TRUE)
var_accuracy4 <- calculate_accuracies("application", mult, mcmc_samples, fit4, "GVA_NR", plot_flag=TRUE)
frisk <- read.table("frisk_with_noise.dat",skip=6,header=TRUE)
C <- model.matrix(stops~factor(eth)+factor(crime)+factor(precinct), data=frisk)
vy <- frisk$stops
mX <- C[, 1:6]
mZ <- C[, 7:ncol(C)]
mult <- create_mult(vy, mX, mZ, 1e5, m=75, blocksize=1, v=2)
mult$prior$a_rho <- 3
now <- Sys.time()
fit1 <- zipvb(mult, method="laplace", verbose=FALSE)
cat("Laplace", Sys.time() - now, "\n")
now <- Sys.time()
fit1 <- zipvb(mult, method="laplace", verbose=FALSE)
cat("Laplace", Sys.time() - now, "\n")
now <- Sys.time()
fit2 <- zipvb(mult, method="gva", verbose=FALSE)
cat("GVA", Sys.time() - now, "\n")
now <- Sys.time()
fit3 <- zipvb(mult, method="gva2", verbose=FALSE)
cat("GVA2", Sys.time() - now, "\n")
now <- Sys.time()
fit4 <- zipvb(mult, method="gva_nr", verbose=FALSE)
cat("GVA NR", Sys.time() - now, "\n")
library(zipvb)
setwd("~/Dropbox/phd/code/")
source("accuracy.R")
library(sqldf)
roachdata <- read.csv(file="../ARM_Data/roaches/roachdata.csv")
RoachCounts <- read.csv(file="../ARM_Data/roaches/RoachCounts.csv")
IPM_BASELINE_R2 <- read.csv(file="../ARM_Data/roaches/IPM_BASELINE_R2.csv")
IPM_BASELINE_R2_032006 <- read.csv(file="../ARM_Data/roaches/IPM_BASELINE_R2.csv")
roaches <- cbind(RoachCounts, IPM_BASELINE_R2_032006)
roaches <- sqldf("select * from roaches where hasround2 = 1")
roaches_long <- matrix(NA, nrow(roaches) * 2, 9)
colnames(roaches_long) <- c("time", "treatment", "senior", "building", "stories", "hasround2", "roachsum", "trapmiss", "trapdays")
roaches_long <- as.data.frame(roaches_long)
for (row_idx in 1:nrow(roaches)) {
roaches_long[row_idx * 2 - 1, "time"] <- 1
roaches_long[row_idx * 2 - 1, "roachsum"] <- roaches[row_idx, "roachsum1"]
roaches_long[row_idx * 2 - 1, "trapmiss"] <- roaches[row_idx, "trapmiss1"]
roaches_long[row_idx * 2 - 1, "trapdays"] <- roaches[row_idx, "trapdays1"]
roaches_long[row_idx * 2 - 1, 2:6] <- roaches[row_idx, 7:11]
roaches_long[row_idx * 2, "time"] <- 2
roaches_long[row_idx * 2, "roachsum"] <- roaches[row_idx, "roachsum2"]
roaches_long[row_idx * 2, "trapmiss"] <- roaches[row_idx, "trapmiss2"]
roaches_long[row_idx * 2, "trapdays"] <- roaches[row_idx, "trapdays2"]
roaches_long[row_idx * 2, 2:6] <- roaches[row_idx, 7:11]
}
fit <- glm(roachsum~time+treatment+senior, data=roaches_long, family=poisson())
summary(fit)
model_mat <- model.matrix(roachsum~time+time:treatment+senior+factor(building), data=roaches_long)
mX <- model.matrix(~time+time:treatment, data=roaches_long)
mZ <- model.matrix(~factor(building), data=roaches_long)
mZ <- mZ[, 2:ncol(mZ)]
vy <- round(with(roaches_long, roachsum / trapdays))
mult <- create_mult(vy, mX, mZ, 1e5, m=13, blocksize=1, v=2)
kappa(mult$mC)
now <- Sys.time()
fit1 <- zipvb(mult, method="laplace", verbose=FALSE, glm_init=FALSE)
cat("Laplace", Sys.time() - now, "\n")
now <- Sys.time()
fit2 <- zipvb(mult, method="gva", verbose=FALSE, glm_init=FALSE)
cat("GVA", Sys.time() - now, "\n")
now <- Sys.time()
fit3 <- zipvb(mult, method="gva2", verbose=FALSE, glm_init=FALSE)
cat("GVA2", Sys.time() - now, "\n")
now <- Sys.time()
fit4 <- zipvb(mult, method="gva_nr", verbose=FALSE, glm_init=FALSE)
cat("GVA_NR", Sys.time() - now, "\n")
load(file="data/accuracy_application_2017_06_15.RData")
var_accuracy <- calculate_accuracies("application", mult, mcmc_samples, fit1, "Laplace", plot_flag=TRUE)
source("accuracy.R")
var_accuracy <- calculate_accuracies("application", mult, mcmc_samples, fit1, "Laplace", plot_flag=TRUE)
library(zipvb)
setwd("~/Dropbox/phd/code/")
source("accuracy.R")
library(sqldf)
roachdata <- read.csv(file="../ARM_Data/roaches/roachdata.csv")
RoachCounts <- read.csv(file="../ARM_Data/roaches/RoachCounts.csv")
IPM_BASELINE_R2 <- read.csv(file="../ARM_Data/roaches/IPM_BASELINE_R2.csv")
IPM_BASELINE_R2_032006 <- read.csv(file="../ARM_Data/roaches/IPM_BASELINE_R2.csv")
roaches <- cbind(RoachCounts, IPM_BASELINE_R2_032006)
roaches <- sqldf("select * from roaches where hasround2 = 1")
roaches_long <- matrix(NA, nrow(roaches) * 2, 9)
colnames(roaches_long) <- c("time", "treatment", "senior", "building", "stories", "hasround2", "roachsum", "trapmiss", "trapdays")
roaches_long <- as.data.frame(roaches_long)
for (row_idx in 1:nrow(roaches)) {
roaches_long[row_idx * 2 - 1, "time"] <- 1
roaches_long[row_idx * 2 - 1, "roachsum"] <- roaches[row_idx, "roachsum1"]
roaches_long[row_idx * 2 - 1, "trapmiss"] <- roaches[row_idx, "trapmiss1"]
roaches_long[row_idx * 2 - 1, "trapdays"] <- roaches[row_idx, "trapdays1"]
roaches_long[row_idx * 2 - 1, 2:6] <- roaches[row_idx, 7:11]
roaches_long[row_idx * 2, "time"] <- 2
roaches_long[row_idx * 2, "roachsum"] <- roaches[row_idx, "roachsum2"]
roaches_long[row_idx * 2, "trapmiss"] <- roaches[row_idx, "trapmiss2"]
roaches_long[row_idx * 2, "trapdays"] <- roaches[row_idx, "trapdays2"]
roaches_long[row_idx * 2, 2:6] <- roaches[row_idx, 7:11]
}
fit <- glm(roachsum~time+treatment+senior, data=roaches_long, family=poisson())
summary(fit)
model_mat <- model.matrix(roachsum~time+time:treatment+senior+factor(building), data=roaches_long)
mX <- model.matrix(~time+time:treatment, data=roaches_long)
mZ <- model.matrix(~factor(building), data=roaches_long)
mZ <- mZ[, 2:ncol(mZ)]
vy <- round(with(roaches_long, roachsum / trapdays))
mult <- create_mult(vy, mX, mZ, 1e5, m=13, blocksize=1, v=2)
kappa(mult$mC)
now <- Sys.time()
fit1 <- zipvb(mult, method="laplace", verbose=FALSE, glm_init=FALSE)
cat("Laplace", Sys.time() - now, "\n")
now <- Sys.time()
fit2 <- zipvb(mult, method="gva", verbose=FALSE, glm_init=FALSE)
cat("GVA", Sys.time() - now, "\n")
now <- Sys.time()
fit3 <- zipvb(mult, method="gva2", verbose=FALSE, glm_init=FALSE)
cat("GVA2", Sys.time() - now, "\n")
now <- Sys.time()
fit4 <- zipvb(mult, method="gva_nr", verbose=FALSE, glm_init=FALSE)
cat("GVA_NR", Sys.time() - now, "\n")
load(file="data/accuracy_application_2017_06_15.RData")
var_accuracy <- calculate_accuracies("application", mult, mcmc_samples, fit1, "Laplace", plot_flag=TRUE)
source("accuracy.R")
var_accuracy <- calculate_accuracies("application", mult, mcmc_samples, fit1, "Laplace", plot_flag=TRUE)
source("accuracy.R")
var_accuracy <- calculate_accuracies("application", mult, mcmc_samples, fit1, "Laplace", plot_flag=TRUE)
source("accuracy.R")
var_accuracy <- calculate_accuracies("application", mult, mcmc_samples, fit1, "Laplace", plot_flag=TRUE)
