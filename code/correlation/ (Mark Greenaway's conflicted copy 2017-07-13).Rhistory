vp <- exp(vlog_p.til)/sum(exp(vlog_p.til))
#plot(vlog_p.til, pch=21, xlab="Model Index", ylab="Log Posterior Model Probability", col="black", bg="black")
#points(cva_models, vlog_p.til[cva_models], pch=21, col="red", bg="red")
posterior_percentage[i] <- sum(vp[cva_models])
}
mean(posterior_percentage)
posterior_percentage <- rep(NA, 100)
for (i in 1:100) {
data <- generate_data(n=50, K=10)
n <- data$n
p <- data$p
vy <- data$vy
mX <- data$mX
K <- data$K
initial_gamma <- data$initial_gamma
cva_result <- cva(initial_gamma, vy, mX, K, 0.5)
corr_result <- correlation::all_correlations_mX(vy, mX, 1, TRUE)
R2 <- corr_result$vR2
p_gamma <- corr_result$vp_gamma
cva_models <- apply(cva_result$models, 1, binary_to_model)
vlog_p <- log_p(n, p, R2, p_gamma)
vlog_p.til <- vlog_p - max(vlog_p)
vp <- exp(vlog_p.til)/sum(exp(vlog_p.til))
#plot(vlog_p.til, pch=21, xlab="Model Index", ylab="Log Posterior Model Probability", col="black", bg="black")
#points(cva_models, vlog_p.til[cva_models], pch=21, col="red", bg="red")
posterior_percentage[i] <- sum(vp[cva_models])
}
mean(posterior_percentage)
posterior_percentage <- rep(NA, 100)
for (i in 1:100) {
data <- generate_data(n=50, K=10)
n <- data$n
p <- data$p
vy <- data$vy
mX <- data$mX
K <- data$K
initial_gamma <- data$initial_gamma
cva_result <- cva(initial_gamma, vy, mX, K, 0.0)
corr_result <- correlation::all_correlations_mX(vy, mX, 1, TRUE)
R2 <- corr_result$vR2
p_gamma <- corr_result$vp_gamma
cva_models <- apply(cva_result$models, 1, binary_to_model)
vlog_p <- log_p(n, p, R2, p_gamma)
vlog_p.til <- vlog_p - max(vlog_p)
vp <- exp(vlog_p.til)/sum(exp(vlog_p.til))
#plot(vlog_p.til, pch=21, xlab="Model Index", ylab="Log Posterior Model Probability", col="black", bg="black")
#points(cva_models, vlog_p.til[cva_models], pch=21, col="red", bg="red")
posterior_percentage[i] <- sum(vp[cva_models])
}
mean(posterior_percentage)
library(correlation)
posterior_percentage <- rep(NA, 100)
for (i in 1:100) {
data <- generate_data(n=50, K=10)
n <- data$n
p <- data$p
vy <- data$vy
mX <- data$mX
K <- data$K
initial_gamma <- data$initial_gamma
cva_result <- cva(initial_gamma, vy, mX, K, 1.0)
corr_result <- correlation::all_correlations_mX(vy, mX, 1, TRUE)
R2 <- corr_result$vR2
p_gamma <- corr_result$vp_gamma
cva_models <- apply(cva_result$models, 1, binary_to_model)
vlog_p <- log_p(n, p, R2, p_gamma)
vlog_p.til <- vlog_p - max(vlog_p)
vp <- exp(vlog_p.til)/sum(exp(vlog_p.til))
#plot(vlog_p.til, pch=21, xlab="Model Index", ylab="Log Posterior Model Probability", col="black", bg="black")
#points(cva_models, vlog_p.til[cva_models], pch=21, col="red", bg="red")
posterior_percentage[i] <- sum(vp[cva_models])
}
posterior_percentage <- rep(NA, 100)
for (i in 1:100) {
data <- generate_data(n=50, K=10)
n <- data$n
p <- data$p
vy <- data$vy
mX <- data$mX
K <- data$K
initial_gamma <- data$initial_gamma
cva_result <- cva(initial_gamma, vy, mX, K, 2.0)
corr_result <- correlation::all_correlations_mX(vy, mX, 1, TRUE)
R2 <- corr_result$vR2
p_gamma <- corr_result$vp_gamma
cva_models <- apply(cva_result$models, 1, binary_to_model)
vlog_p <- log_p(n, p, R2, p_gamma)
vlog_p.til <- vlog_p - max(vlog_p)
vp <- exp(vlog_p.til)/sum(exp(vlog_p.til))
#plot(vlog_p.til, pch=21, xlab="Model Index", ylab="Log Posterior Model Probability", col="black", bg="black")
#points(cva_models, vlog_p.til[cva_models], pch=21, col="red", bg="red")
posterior_percentage[i] <- sum(vp[cva_models])
}
posterior_percentage <- rep(NA, 100)
for (i in 1:100) {
data <- generate_data(n=50, K=10)
n <- data$n
p <- data$p
vy <- data$vy
mX <- data$mX
K <- data$K
initial_gamma <- data$initial_gamma
cva_result <- cva(initial_gamma, vy, mX, K, 0.5)
corr_result <- correlation::all_correlations_mX(vy, mX, 1, TRUE)
R2 <- corr_result$vR2
p_gamma <- corr_result$vp_gamma
cva_models <- apply(cva_result$models, 1, binary_to_model)
vlog_p <- log_p(n, p, R2, p_gamma)
vlog_p.til <- vlog_p - max(vlog_p)
vp <- exp(vlog_p.til)/sum(exp(vlog_p.til))
#plot(vlog_p.til, pch=21, xlab="Model Index", ylab="Log Posterior Model Probability", col="black", bg="black")
#points(cva_models, vlog_p.til[cva_models], pch=21, col="red", bg="red")
posterior_percentage[i] <- sum(vp[cva_models])
}
mean(posterior_percentage)
library(correlation)
library(correlation)
library(correlation)
posterior_percentage <- rep(NA, 100)
for (i in 1:100) {
data <- generate_data(n=50, K=10)
n <- data$n
p <- data$p
vy <- data$vy
mX <- data$mX
K <- data$K
initial_gamma <- data$initial_gamma
cva_result <- cva(initial_gamma, vy, mX, K, 1.0)
corr_result <- correlation::all_correlations_mX(vy, mX, 1, TRUE)
R2 <- corr_result$vR2
p_gamma <- corr_result$vp_gamma
cva_models <- apply(cva_result$models, 1, binary_to_model)
vlog_p <- log_p(n, p, R2, p_gamma)
vlog_p.til <- vlog_p - max(vlog_p)
vp <- exp(vlog_p.til)/sum(exp(vlog_p.til))
#plot(vlog_p.til, pch=21, xlab="Model Index", ylab="Log Posterior Model Probability", col="black", bg="black")
#points(cva_models, vlog_p.til[cva_models], pch=21, col="red", bg="red")
posterior_percentage[i] <- sum(vp[cva_models])
}
mean(posterior_percentage)
library(correlation)
posterior_percentage <- rep(NA, 100)
for (i in 1:100) {
data <- generate_data(n=50, K=10)
n <- data$n
p <- data$p
vy <- data$vy
mX <- data$mX
K <- data$K
initial_gamma <- data$initial_gamma
cva_result <- cva(initial_gamma, vy, mX, K, 1.0)
corr_result <- correlation::all_correlations_mX(vy, mX, 1, TRUE)
R2 <- corr_result$vR2
p_gamma <- corr_result$vp_gamma
cva_models <- apply(cva_result$models, 1, binary_to_model)
vlog_p <- log_p(n, p, R2, p_gamma)
vlog_p.til <- vlog_p - max(vlog_p)
vp <- exp(vlog_p.til)/sum(exp(vlog_p.til))
#plot(vlog_p.til, pch=21, xlab="Model Index", ylab="Log Posterior Model Probability", col="black", bg="black")
#points(cva_models, vlog_p.til[cva_models], pch=21, col="red", bg="red")
posterior_percentage[i] <- sum(vp[cva_models])
}
mean(posterior_percentage)
library(correlation)
library(correlation)
posterior_percentage <- rep(NA, 100)
for (i in 1:1) {
data <- generate_data(n=50, K=10)
n <- data$n
p <- data$p
vy <- data$vy
mX <- data$mX
K <- data$K
initial_gamma <- data$initial_gamma
cva_result <- cva(initial_gamma, vy, mX, K, 1.0)
corr_result <- correlation::all_correlations_mX(vy, mX, 1, TRUE)
R2 <- corr_result$vR2
p_gamma <- corr_result$vp_gamma
cva_models <- apply(cva_result$models, 1, binary_to_model)
vlog_p <- log_p(n, p, R2, p_gamma)
vlog_p.til <- vlog_p - max(vlog_p)
vp <- exp(vlog_p.til)/sum(exp(vlog_p.til))
#plot(vlog_p.til, pch=21, xlab="Model Index", ylab="Log Posterior Model Probability", col="black", bg="black")
#points(cva_models, vlog_p.til[cva_models], pch=21, col="red", bg="red")
posterior_percentage[i] <- sum(vp[cva_models])
}
posterior_percentage <- rep(NA, 100)
for (i in 1:100) {
data <- generate_data(n=50, K=10)
n <- data$n
p <- data$p
vy <- data$vy
mX <- data$mX
K <- data$K
initial_gamma <- data$initial_gamma
cva_result <- cva(initial_gamma, vy, mX, K, 1.0)
corr_result <- correlation::all_correlations_mX(vy, mX, 1, TRUE)
R2 <- corr_result$vR2
p_gamma <- corr_result$vp_gamma
cva_models <- apply(cva_result$models, 1, binary_to_model)
vlog_p <- log_p(n, p, R2, p_gamma)
vlog_p.til <- vlog_p - max(vlog_p)
vp <- exp(vlog_p.til)/sum(exp(vlog_p.til))
#plot(vlog_p.til, pch=21, xlab="Model Index", ylab="Log Posterior Model Probability", col="black", bg="black")
#points(cva_models, vlog_p.til[cva_models], pch=21, col="red", bg="red")
posterior_percentage[i] <- sum(vp[cva_models])
}
library(correlation)
posterior_percentage <- rep(NA, 100)
for (i in 1:100) {
cat("i ", i, "\n")
data <- generate_data(n=50, K=10)
n <- data$n
p <- data$p
vy <- data$vy
mX <- data$mX
K <- data$K
initial_gamma <- data$initial_gamma
cva_result <- cva(initial_gamma, vy, mX, K, 1.0)
corr_result <- correlation::all_correlations_mX(vy, mX, 1, TRUE)
R2 <- corr_result$vR2
p_gamma <- corr_result$vp_gamma
cva_models <- apply(cva_result$models, 1, binary_to_model)
vlog_p <- log_p(n, p, R2, p_gamma)
vlog_p.til <- vlog_p - max(vlog_p)
vp <- exp(vlog_p.til)/sum(exp(vlog_p.til))
#plot(vlog_p.til, pch=21, xlab="Model Index", ylab="Log Posterior Model Probability", col="black", bg="black")
#points(cva_models, vlog_p.til[cva_models], pch=21, col="red", bg="red")
posterior_percentage[i] <- sum(vp[cva_models])
}
posterior_percentage <- rep(NA, 100)
for (i in 1:100) {
cat("i ", i, "\n")
data <- generate_data(n=50, K=5)
n <- data$n
p <- data$p
vy <- data$vy
mX <- data$mX
K <- data$K
initial_gamma <- data$initial_gamma
cva_result <- cva(initial_gamma, vy, mX, K, 1.0)
corr_result <- correlation::all_correlations_mX(vy, mX, 1, TRUE)
R2 <- corr_result$vR2
p_gamma <- corr_result$vp_gamma
cva_models <- apply(cva_result$models, 1, binary_to_model)
vlog_p <- log_p(n, p, R2, p_gamma)
vlog_p.til <- vlog_p - max(vlog_p)
vp <- exp(vlog_p.til)/sum(exp(vlog_p.til))
#plot(vlog_p.til, pch=21, xlab="Model Index", ylab="Log Posterior Model Probability", col="black", bg="black")
#points(cva_models, vlog_p.til[cva_models], pch=21, col="red", bg="red")
posterior_percentage[i] <- sum(vp[cva_models])
}
mean(posterior_percentage)
posterior_percentage <- rep(NA, 100)
for (i in 1:100) {
cat("i ", i, "\n")
data <- generate_data(n=50, K=5)
n <- data$n
p <- data$p
vy <- data$vy
mX <- data$mX
K <- data$K
initial_gamma <- data$initial_gamma
cva_result <- cva(initial_gamma, vy, mX, K, 10.0)
corr_result <- correlation::all_correlations_mX(vy, mX, 1, TRUE)
R2 <- corr_result$vR2
p_gamma <- corr_result$vp_gamma
cva_models <- apply(cva_result$models, 1, binary_to_model)
vlog_p <- log_p(n, p, R2, p_gamma)
vlog_p.til <- vlog_p - max(vlog_p)
vp <- exp(vlog_p.til)/sum(exp(vlog_p.til))
#plot(vlog_p.til, pch=21, xlab="Model Index", ylab="Log Posterior Model Probability", col="black", bg="black")
#points(cva_models, vlog_p.til[cva_models], pch=21, col="red", bg="red")
posterior_percentage[i] <- sum(vp[cva_models])
}
mean(posterior_percentage)
posterior_percentage <- rep(NA, 100)
for (i in 1:100) {
cat("i ", i, "\n")
data <- generate_data(n=50, K=5)
n <- data$n
p <- data$p
vy <- data$vy
mX <- data$mX
K <- data$K
initial_gamma <- data$initial_gamma
cva_result <- cva(initial_gamma, vy, mX, K, 1.0)
corr_result <- correlation::all_correlations_mX(vy, mX, 1, TRUE)
R2 <- corr_result$vR2
p_gamma <- corr_result$vp_gamma
cva_models <- apply(cva_result$models, 1, binary_to_model)
vlog_p <- log_p(n, p, R2, p_gamma)
vlog_p.til <- vlog_p - max(vlog_p)
vp <- exp(vlog_p.til)/sum(exp(vlog_p.til))
#plot(vlog_p.til, pch=21, xlab="Model Index", ylab="Log Posterior Model Probability", col="black", bg="black")
#points(cva_models, vlog_p.til[cva_models], pch=21, col="red", bg="red")
posterior_percentage[i] <- sum(vp[cva_models])
}
mean(posterior_percentage)
library(correlation)
posterior_percentage <- rep(NA, 100)
for (i in 1:1) {
cat("i ", i, "\n")
data <- generate_data(n=50, K=5)
n <- data$n
p <- data$p
vy <- data$vy
mX <- data$mX
K <- data$K
initial_gamma <- data$initial_gamma
cva_result <- cva(initial_gamma, vy, mX, K, 1.0)
corr_result <- correlation::all_correlations_mX(vy, mX, 1, TRUE)
R2 <- corr_result$vR2
p_gamma <- corr_result$vp_gamma
cva_models <- apply(cva_result$models, 1, binary_to_model)
vlog_p <- log_p(n, p, R2, p_gamma)
vlog_p.til <- vlog_p - max(vlog_p)
vp <- exp(vlog_p.til)/sum(exp(vlog_p.til))
#plot(vlog_p.til, pch=21, xlab="Model Index", ylab="Log Posterior Model Probability", col="black", bg="black")
#points(cva_models, vlog_p.til[cva_models], pch=21, col="red", bg="red")
posterior_percentage[i] <- sum(vp[cva_models])
}
posterior_percentage <- rep(NA, 100)
for (i in 1:1) {
cat("i", i, "\n")
data <- generate_data(n=50, K=5)
n <- data$n
p <- data$p
vy <- data$vy
mX <- data$mX
K <- data$K
initial_gamma <- data$initial_gamma
cva_result <- cva(initial_gamma, vy, mX, K, 1.0)
corr_result <- correlation::all_correlations_mX(vy, mX, 1, TRUE)
R2 <- corr_result$vR2
p_gamma <- corr_result$vp_gamma
cva_models <- apply(cva_result$models, 1, binary_to_model)
vlog_p <- log_p(n, p, R2, p_gamma)
vlog_p.til <- vlog_p - max(vlog_p)
vp <- exp(vlog_p.til)/sum(exp(vlog_p.til))
#plot(vlog_p.til, pch=21, xlab="Model Index", ylab="Log Posterior Model Probability", col="black", bg="black")
#points(cva_models, vlog_p.til[cva_models], pch=21, col="red", bg="red")
posterior_percentage[i] <- sum(vp[cva_models])
}
library(correlation)
posterior_percentage <- rep(NA, 100)
for (i in 1:1) {
cat("i", i, "\n")
data <- generate_data(n=50, K=5)
n <- data$n
p <- data$p
vy <- data$vy
mX <- data$mX
K <- data$K
initial_gamma <- data$initial_gamma
cva_result <- cva(initial_gamma, vy, mX, K, 1.0)
corr_result <- correlation::all_correlations_mX(vy, mX, 1, TRUE)
R2 <- corr_result$vR2
p_gamma <- corr_result$vp_gamma
cva_models <- apply(cva_result$models, 1, binary_to_model)
vlog_p <- log_p(n, p, R2, p_gamma)
vlog_p.til <- vlog_p - max(vlog_p)
vp <- exp(vlog_p.til)/sum(exp(vlog_p.til))
#plot(vlog_p.til, pch=21, xlab="Model Index", ylab="Log Posterior Model Probability", col="black", bg="black")
#points(cva_models, vlog_p.til[cva_models], pch=21, col="red", bg="red")
posterior_percentage[i] <- sum(vp[cva_models])
}
library(correlation)
posterior_percentage <- rep(NA, 100)
for (i in 1:1) {
cat("i", i, "\n")
data <- generate_data(n=50, K=5)
n <- data$n
p <- data$p
vy <- data$vy
mX <- data$mX
K <- data$K
initial_gamma <- data$initial_gamma
cva_result <- cva(initial_gamma, vy, mX, K, 1.0)
corr_result <- correlation::all_correlations_mX(vy, mX, 1, TRUE)
R2 <- corr_result$vR2
p_gamma <- corr_result$vp_gamma
cva_models <- apply(cva_result$models, 1, binary_to_model)
vlog_p <- log_p(n, p, R2, p_gamma)
vlog_p.til <- vlog_p - max(vlog_p)
vp <- exp(vlog_p.til)/sum(exp(vlog_p.til))
#plot(vlog_p.til, pch=21, xlab="Model Index", ylab="Log Posterior Model Probability", col="black", bg="black")
#points(cva_models, vlog_p.til[cva_models], pch=21, col="red", bg="red")
posterior_percentage[i] <- sum(vp[cva_models])
}
library(correlation)
posterior_percentage <- rep(NA, 100)
for (i in 1:1) {
cat("i", i, "\n")
data <- generate_data(n=50, K=5)
n <- data$n
p <- data$p
vy <- data$vy
mX <- data$mX
K <- data$K
initial_gamma <- data$initial_gamma
cva_result <- cva(initial_gamma, vy, mX, K, 1.0)
corr_result <- correlation::all_correlations_mX(vy, mX, 1, TRUE)
R2 <- corr_result$vR2
p_gamma <- corr_result$vp_gamma
cva_models <- apply(cva_result$models, 1, binary_to_model)
vlog_p <- log_p(n, p, R2, p_gamma)
vlog_p.til <- vlog_p - max(vlog_p)
vp <- exp(vlog_p.til)/sum(exp(vlog_p.til))
#plot(vlog_p.til, pch=21, xlab="Model Index", ylab="Log Posterior Model Probability", col="black", bg="black")
#points(cva_models, vlog_p.til[cva_models], pch=21, col="red", bg="red")
posterior_percentage[i] <- sum(vp[cva_models])
}
library(correlation)
posterior_percentage <- rep(NA, 100)
for (i in 1:1) {
cat("i", i, "\n")
data <- generate_data(n=50, K=5)
n <- data$n
p <- data$p
vy <- data$vy
mX <- data$mX
K <- data$K
initial_gamma <- data$initial_gamma
cva_result <- cva(initial_gamma, vy, mX, K, 1.0)
corr_result <- correlation::all_correlations_mX(vy, mX, 1, TRUE)
R2 <- corr_result$vR2
p_gamma <- corr_result$vp_gamma
cva_models <- apply(cva_result$models, 1, binary_to_model)
vlog_p <- log_p(n, p, R2, p_gamma)
vlog_p.til <- vlog_p - max(vlog_p)
vp <- exp(vlog_p.til)/sum(exp(vlog_p.til))
#plot(vlog_p.til, pch=21, xlab="Model Index", ylab="Log Posterior Model Probability", col="black", bg="black")
#points(cva_models, vlog_p.til[cva_models], pch=21, col="red", bg="red")
posterior_percentage[i] <- sum(vp[cva_models])
}
library(correlation)
posterior_percentage <- rep(NA, 100)
for (i in 1:1) {
cat("i", i, "\n")
data <- generate_data(n=50, K=5)
n <- data$n
p <- data$p
vy <- data$vy
mX <- data$mX
K <- data$K
initial_gamma <- data$initial_gamma
cva_result <- cva(initial_gamma, vy, mX, K, 1.0)
corr_result <- correlation::all_correlations_mX(vy, mX, 1, TRUE)
R2 <- corr_result$vR2
p_gamma <- corr_result$vp_gamma
cva_models <- apply(cva_result$models, 1, binary_to_model)
vlog_p <- log_p(n, p, R2, p_gamma)
vlog_p.til <- vlog_p - max(vlog_p)
vp <- exp(vlog_p.til)/sum(exp(vlog_p.til))
#plot(vlog_p.til, pch=21, xlab="Model Index", ylab="Log Posterior Model Probability", col="black", bg="black")
#points(cva_models, vlog_p.til[cva_models], pch=21, col="red", bg="red")
posterior_percentage[i] <- sum(vp[cva_models])
}
library(correlation)
library(correlation)
posterior_percentage <- rep(NA, 100)
for (i in 1:1) {
cat("i", i, "\n")
data <- generate_data(n=50, K=5)
n <- data$n
p <- data$p
vy <- data$vy
mX <- data$mX
K <- data$K
initial_gamma <- data$initial_gamma
cva_result <- cva(initial_gamma, vy, mX, K, 1.0)
corr_result <- correlation::all_correlations_mX(vy, mX, 1, TRUE)
R2 <- corr_result$vR2
p_gamma <- corr_result$vp_gamma
cva_models <- apply(cva_result$models, 1, binary_to_model)
vlog_p <- log_p(n, p, R2, p_gamma)
vlog_p.til <- vlog_p - max(vlog_p)
vp <- exp(vlog_p.til)/sum(exp(vlog_p.til))
#plot(vlog_p.til, pch=21, xlab="Model Index", ylab="Log Posterior Model Probability", col="black", bg="black")
#points(cva_models, vlog_p.til[cva_models], pch=21, col="red", bg="red")
posterior_percentage[i] <- sum(vp[cva_models])
}
mean(posterior_percentage)
posterior_percentage
library(correlation)
posterior_percentage <- rep(NA, 100)
for (i in 1:1) {
cat("i", i, "\n")
data <- generate_data(n=50, K=5)
n <- data$n
p <- data$p
vy <- data$vy
mX <- data$mX
K <- data$K
initial_gamma <- data$initial_gamma
cva_result <- cva(initial_gamma, vy, mX, K, 1.0)
corr_result <- correlation::all_correlations_mX(vy, mX, 1, TRUE)
R2 <- corr_result$vR2
p_gamma <- corr_result$vp_gamma
cva_models <- apply(cva_result$models, 1, binary_to_model)
vlog_p <- log_p(n, p, R2, p_gamma)
vlog_p.til <- vlog_p - max(vlog_p)
vp <- exp(vlog_p.til)/sum(exp(vlog_p.til))
#plot(vlog_p.til, pch=21, xlab="Model Index", ylab="Log Posterior Model Probability", col="black", bg="black")
#points(cva_models, vlog_p.til[cva_models], pch=21, col="red", bg="red")
posterior_percentage[i] <- sum(vp[cva_models])
}
library(correlation)
library(correlation)
library(BMS)
?bms
