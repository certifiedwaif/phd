// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

// cva
List cva(NumericMatrix gamma_initial, NumericVector vy_in, NumericMatrix mX_in, const int K, const double lambda);
RcppExport SEXP correlation_cva(SEXP gamma_initialSEXP, SEXP vy_inSEXP, SEXP mX_inSEXP, SEXP KSEXP, SEXP lambdaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type gamma_initial(gamma_initialSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type vy_in(vy_inSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type mX_in(mX_inSEXP);
    Rcpp::traits::input_parameter< const int >::type K(KSEXP);
    Rcpp::traits::input_parameter< const double >::type lambda(lambdaSEXP);
    rcpp_result_gen = Rcpp::wrap(cva(gamma_initial, vy_in, mX_in, K, lambda));
    return rcpp_result_gen;
END_RCPP
}
// all_correlations_mX
List all_correlations_mX(NumericVector vy, NumericMatrix mX, int intercept_col, bool bNatural_Order, bool bIntercept, bool bCentre, int cores);
RcppExport SEXP correlation_all_correlations_mX(SEXP vySEXP, SEXP mXSEXP, SEXP intercept_colSEXP, SEXP bNatural_OrderSEXP, SEXP bInterceptSEXP, SEXP bCentreSEXP, SEXP coresSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type vy(vySEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type mX(mXSEXP);
    Rcpp::traits::input_parameter< int >::type intercept_col(intercept_colSEXP);
    Rcpp::traits::input_parameter< bool >::type bNatural_Order(bNatural_OrderSEXP);
    Rcpp::traits::input_parameter< bool >::type bIntercept(bInterceptSEXP);
    Rcpp::traits::input_parameter< bool >::type bCentre(bCentreSEXP);
    Rcpp::traits::input_parameter< int >::type cores(coresSEXP);
    rcpp_result_gen = Rcpp::wrap(all_correlations_mX(vy, mX, intercept_col, bNatural_Order, bIntercept, bCentre, cores));
    return rcpp_result_gen;
END_RCPP
}
// all_correlations_mX_mZ
List all_correlations_mX_mZ(NumericVector vy, NumericMatrix mX, NumericMatrix mZ, int intercept_col, bool bNatural_Order, bool bIntercept, bool bCentre, int cores);
RcppExport SEXP correlation_all_correlations_mX_mZ(SEXP vySEXP, SEXP mXSEXP, SEXP mZSEXP, SEXP intercept_colSEXP, SEXP bNatural_OrderSEXP, SEXP bInterceptSEXP, SEXP bCentreSEXP, SEXP coresSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type vy(vySEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type mX(mXSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type mZ(mZSEXP);
    Rcpp::traits::input_parameter< int >::type intercept_col(intercept_colSEXP);
    Rcpp::traits::input_parameter< bool >::type bNatural_Order(bNatural_OrderSEXP);
    Rcpp::traits::input_parameter< bool >::type bIntercept(bInterceptSEXP);
    Rcpp::traits::input_parameter< bool >::type bCentre(bCentreSEXP);
    Rcpp::traits::input_parameter< int >::type cores(coresSEXP);
    rcpp_result_gen = Rcpp::wrap(all_correlations_mX_mZ(vy, mX, mZ, intercept_col, bNatural_Order, bIntercept, bCentre, cores));
    return rcpp_result_gen;
END_RCPP
}
// graycode
IntegerMatrix graycode(unsigned int varying, unsigned int fixed);
RcppExport SEXP correlation_graycode(SEXP varyingSEXP, SEXP fixedSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< unsigned int >::type varying(varyingSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type fixed(fixedSEXP);
    rcpp_result_gen = Rcpp::wrap(graycode(varying, fixed));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"correlation_cva", (DL_FUNC) &correlation_cva, 5},
    {"correlation_all_correlations_mX", (DL_FUNC) &correlation_all_correlations_mX, 7},
    {"correlation_all_correlations_mX_mZ", (DL_FUNC) &correlation_all_correlations_mX_mZ, 8},
    {"correlation_graycode", (DL_FUNC) &correlation_graycode, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_correlation(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
