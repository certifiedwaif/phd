
R version 3.1.2 (2014-10-31) -- "Pumpkin Helmet"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> # accuracy.R
> setwd("~/phd/code")
> source("zero_inflated_model.R")
> source("test_zero_inflated_model.R")
> source("rwmh.R")
> 
> generate_test_data = function(m, ni)
+ {
+   m = m
+   ni = ni
+   n = rep(ni,m)
+   mX = matrix(as.vector(cbind(rep(1, sum(n)), runif(sum(n), -1, 1))), sum(n), 2)
+   #print("mX=")
+   #print(mX)
+   #cat("dim(mX)", dim(mX), "\n")
+   
+   #v = c(rep(1, g), rep(0, g))
+   # Indicator variables for groups
+   
+   #mZ = matrix(cbind(v, 1-v), sum(n), 2)
+   #mZ <- matrix(0,sum(n),m)
+   #count <- 0
+   #for (i in 1:m) {
+   #  mZ[count + (1:n[i]),i] <- 1
+   #  count <- count + n[i]
+   #}
+   
+   mZ <- kronecker(diag(1,m),rep(1,ni))
+   
+   #print("mZ=")
+   #print(mZ)
+   #cat("dim(mZ)", dim(mZ), "\n")
+   
+   expected_rho = 0.5
+   expected_beta = c(2, 1)
+   expected_sigma2_u = .5^2
+   a_sigma = 1e-2
+   b_sigma = 1e-2
+   
+   tau = 1.0E2
+   
+   sigma2.beta <- 1.0E3
+   
+   test_data = generate_multivariate_test_data(mX, mZ, m, n, expected_rho, expected_beta, expected_sigma2_u)
+   vy = test_data$vy
+   
+   # Test accuracy
+   mult = create_multivariate(vy, mX, mZ, sigma2.beta, a_sigma, b_sigma, tau, m=m, blocksize=1, spline_dim=0)
+   
+   return(mult)
+ }
> 
> generate_slope_test_data = function() {
+   m = 20
+   ni = 10
+   n = rep(ni,m)
+   mX = matrix(as.vector(cbind(rep(1, sum(n)), runif(sum(n), -1, 1))), sum(n), 2)
+   mZ = makeZ(mX, m, ni, p=2)
+   
+   expected_rho = 0.5
+   expected_beta = c(2, 1)
+   expected_sigma2_u = .5^2
+   a_sigma = 1e-2
+   b_sigma = 1e-2
+   
+   tau = 1.0E2
+   
+   sigma2.beta <- 1.0E3
+   
+   test_data = generate_multivariate_test_data(mX, mZ, m, n, expected_rho, expected_beta, expected_sigma2_u, verbose=TRUE)
+   vy = test_data$vy
+   
+   # Test model fitting
+   mult = create_multivariate(vy, mX, mZ, sigma2.beta, a_sigma, b_sigma, tau, m=m, blocksize=2, spline_dim=0)
+   return(mult)
+ }
> 
> generate_spline_test_data = function()
+ {
+   n = 5000
+   vx = matrix(sort(runif(n, -1, 1))) 
+   
+   mX = cbind(1,vx)
+   
+   expected_rho = 1
+   #expected_mu = c(0, 1)
+   expected_sigma2_u = 0
+   sigma2.beta = 1e5
+   a_sigma = 1e5
+   b_sigma = 1e5
+   tau = 1.0E-5
+   
+   sigma2.true = 0.01
+   expected_beta = c(0, 1)
+   vf = 5+2*sin(pi*vx)
+   vy = rpois(n,exp(vf))
+   
+   source("ZOsull.r")
+   numIntKnots <- 35
+   intKnots <- quantile(unique(vx),seq(0,1,length=(numIntKnots+2))[-c(1,(numIntKnots+2))])
+   
+   mZ = ZOSull(vx,range.x=c(-1.1,1.1),intKnots=intKnots,drv=0)
+   #vy = 2+mX[,1]^3+rnorm(m)*.1
+   #result = fit_spline(vx, vy)
+   #result = fit_spline(mX[,1], vy)
+   #mZ = result$Z
+   
+   #mZ <- mZ/max(mZ)
+   
+   mult = create_multivariate(vy, mX, mZ, sigma2.beta, a_sigma, b_sigma, tau, m=0, blocksize=1, spline_dim=37)
+   
+   return(mult)
+ }
> 
> calculate_accuracy = function(mult, mcmc_samples, var_result, print_flag=FALSE, plot_flag=FALSE)
+ {
+   # TODO: Add support for checking the accuracy over multiple dimensions
+   # cubature$adaptIntegrate
+   
+   if (plot_flag) pdf(paste0("accuracy_plots_", approximation, ".pdf"))
+   #return(var_result)
+   # vbeta accuracy
+   calculate_accuracy3 = function(mcmc_samples, dist_fn, param1, param2)
+   {
+     mcmc_density = density(mcmc_samples)
+     mcmc_fn = splinefun(mcmc_density$x, mcmc_density$y)
+     
+     integrand <- function(x)
+     {
+       return(abs(mcmc_fn(x) - dist_fn(x, param1, param2)))
+     }
+     result = integrate(integrand, min(mcmc_density$x), max(mcmc_density$x),
+                        subdivisions = length(mcmc_density$x))
+     accuracy = 1 - .5 * result$value
+     return(accuracy)
+   }
+   
+   # Compare MCMC distribution with variational approximation for each parameter
+   # vnu[i] ~ Normal, dnorm
+   # sigma2_u ~ IG, dgamma(1/x)
+   # rho ~ Beta, dbeta
+   # vr[i] ~ Bernoulli, dbinom
+   # For each parameter of interest,
+   # * estimate density of MCMC
+   # * compare with q distribution using L_1 norm
+   
+   # Kernel density estimates of MCMC-estimated posteriors
+   # Use L_1 distance to compare against variational approximations of posteriors
+  
+   accuracy_plot = function(mcmc_samples, dist_fn, param1, param2)
+   {
+     mcmc_density = density(mcmc_samples)
+     plot(mcmc_density)
+     curve(dist_fn(x, param1, param2),
+           from=min(mcmc_density$x), to=max(mcmc_density$x),
+           add=TRUE, lty=2, col="blue")
+   }
+   
+   vbeta_accuracy = rep(NA, ncol(mult$mX))
+   for (i in 1:ncol(mult$mX)) {
+     vbeta_accuracy[i] = calculate_accuracy3(mcmc_samples$vbeta[,i], dnorm,
+                                             var_result$vmu[i], sqrt(var_result$mLambda[i,i]))
+     if (print_flag) cat("vbeta[", i, "]", approximation, "accuracy:", vbeta_accuracy[i], "\n")
+     
+     param_name = sprintf("vbeta[%d]", 1)
+     if (plot_flag) accuracy_plot(mcmc_samples$vbeta[,i], dnorm,
+                             var_result$vmu[i], sqrt(var_result$mLambda[i,i]))
+   }
+   
+   # vu accuracy
+   # FIXME: To check for random slopes accuracy, this section will have
+   # to get more complex.
+   print(dim(mult$mZ))
+   print(dim(mcmc_samples$u))
+   vu_accuracy = rep(NA, ncol(mult$mZ))
+   for (i in 1:ncol(mult$mZ)) {
+     vu_accuracy[i] = calculate_accuracy3(mcmc_samples$u[,i], dnorm,
+                                          var_result$vmu[i+2], sqrt(var_result$mLambda[i+2,i+2]))
+     if (print_flag) cat("vu[", i, "]", approximation, "accuracy:", vu_accuracy[i], "\n")
+     if (plot_flag) accuracy_plot(mcmc_samples$u[,i], dnorm,
+                             var_result$vmu[i+2], sqrt(var_result$mLambda[i+2,i+2]))
+   }
+   
+   # sigma2_u accuracy
+   sigma2_u_accuracy = calculate_accuracy3(1/mcmc_samples$sigma_u^2, dgamma,
+                                           var_result$a_sigma, var_result$b_sigma)
+   if (print_flag) cat("sigma2_u", approximation, "accuracy:", sigma2_u_accuracy, "\n")
+   if (plot_flag) accuracy_plot(1/mcmc_samples$sigma_u^2, dgamma,
+                           var_result$a_sigma, var_result$b_sigma)
+   
+   # rho accuracy
+   rho_accuracy = calculate_accuracy3(mcmc_samples$rho, dbeta,
+                                      var_result$a_rho, var_result$b_rho)
+   if (print_flag) cat("rho", approximation, "accuracy: ", rho_accuracy, "\n")
+   if (plot_flag) accuracy_plot(mcmc_samples$rho, dbeta,
+                           var_result$a_rho, var_result$b_rho)
+   if (plot_flag) dev.off()
+   return(list(var_result=var_result,
+               vbeta_accuracy=vbeta_accuracy,
+               vu_accuracy=vu_accuracy,
+               sigma2_u_accuracy=sigma2_u_accuracy,
+               rho_accuracy=rho_accuracy))
+ }
> 
> test_accuracy = function(mult, mcmc_samples, approximation, plot=FALSE)
+ {
+   var_result = zero_infl_var(mult, method=approximation, verbose=TRUE)
+   return(calculate_accuracy(mult, mcmc_samples, var_result))
+ }
> 
> # Calculate accuracy ----
> # Approximate the L1 norm between the variational approximation and
> # the MCMC approximation
> calculate_univariate_accuracy <- function(result_mcmc, var_result)
+ {
+   density_mcmc_rho = density(result_mcmc$vrho)
+   integrand <- function(x)
+   {
+     fn = splinefun(density_mcmc_rho$x, density_mcmc_rho$y)
+     return(abs(fn(x) - dbeta(x, var_result$a_rho, var_result$b_rho)))
+   }
+   result = integrate(integrand, min(density_mcmc_rho$x), max(density_mcmc_rho$x), subdivisions = length(density_mcmc_rho$x))
+   rho_accuracy = 1 - .5 * result$value
+   
+   density_mcmc_lambda = density(result_mcmc$vlambda)
+   integrand <- function(x)
+   {
+     fn = splinefun(density_mcmc_lambda$x, density_mcmc_lambda$y)
+     return(abs(fn(x) - dgamma(x, var_result$a_lambda, var_result$b_lambda)))
+   }
+   result = integrate(integrand, min(density_mcmc_lambda$x), max(density_mcmc_lambda$x), subdivisions = length(density_mcmc_lambda$x))
+   lambda_accuracy = 1 - .5 * result$value
+   return(list(rho_accuracy=rho_accuracy, lambda_accuracy=lambda_accuracy))
+ }
> 
> test_accuracies = function()
+ {
+   # Need to be able to compare the solution paths of each approximation
+   
+   # Generate data
+   # for (i in 1:100) {
+   #   set.seed(i)
+   #   mult = generate_test_data(20, 100)
+   #   # Monte Carlo Markov Chains approximation
+   #   mcmc_samples = mcmc_approximation(mult, iterations=1e6)
+   #   # Save the results, because this takes such a long time to run.
+   # }
+   # save(mult, mcmc_samples, file="accuracy_good.RData")
+   set.seed(1)
+   mult = generate_test_data(10, 100)
+   # Monte Carlo Markov Chains approximation
+   mcmc_samples = mcmc_approximation(mult, iterations=1e6, mc.cores = 32)
+ #   # Save the results, because this takes such a long time to run.
+ #   #save(mult, mcmc_samples, file="accuracy.RData")
+   save(mult, mcmc_samples, file="accuracy_int.RData")
+   #load(file="accuracy_int.RData")
+   #mult$spline_dim = 0
+   #load(file="accuracy.RData")
+   # Test all other approximations against it
+   #load(file="accuracy.RData")
+   
+   # Test multivariate approximation's accuracy
+   now = Sys.time()
+   var1 = test_accuracy(mult, mcmc_samples, "laplacian")
+   Sys.time() - now
+   #print(image(Matrix(var1$var_result$mLambda)))
+   print(var1)
+   
+   now = Sys.time()
+   var2 = test_accuracy(mult, mcmc_samples, "gva")
+   Sys.time() - now
+   #print(image(Matrix(var2$var_result$mLambda)))
+   print(var2)
+   
+   now = Sys.time()
+   var3 = test_accuracy(mult, mcmc_samples, "gva2")
+   Sys.time() - now
+   #print(image(Matrix(var3$mLambda)))
+   print(var3)
+   
+   #Rprof()
+   now = Sys.time()
+   var4 = test_accuracy(mult, mcmc_samples, "gva2new")
+   print(Sys.time() - now)
+   #print(image(Matrix(var4$var_result$mLambda)))
+   print(var4)
+   
+   #Rprof(NULL)
+   #summaryRprof()
+   #print(image(Matrix(var3_new$mLambda)))
+   
+   now = Sys.time()
+   var5 = tryCatch(test_accuracy(mult, mcmc_samples, "gva_nr"),
+ 					error = function (E) { return(NULL) })
+   Sys.time() - now
+   #print(image(Matrix(var4$result_var$mLambda)))
+   print(var5)
+   
+   save(var1, var2, var3, var4, var5, file="accuracy_results_int.RData")
+   #for (i in 1:100) {
+   #  set.seed(i)
+   #  mult = generate_test_data(20, 100)
+   #  mcmc_samples = mcmc_approximation(mult, iterations=1e4)
+   #  
+   #  var1 = test_accuracy(mult, mcmc_samples, "laplacian")
+   #  var2 = test_accuracy(mult, mcmc_samples, "gva")
+   #  var3 = test_accuracy(mult, mcmc_samples, "gva2")
+   #  var4 = test_accuracy(mult, mcmc_samples, "gva_nr")
+   #}
+   
+ }
> test_accuracies()

TRANSLATING MODEL 'multivariate_zip' FROM Stan CODE TO C++ CODE NOW.
COMPILING THE C++ CODE FOR MODEL 'multivariate_zip' NOW.

#  Elapsed Time: 9998.12 seconds (Warm-up)
#                14509 seconds (Sampling)
#                24507.1 seconds (Total)


#  Elapsed Time: 9965.53 seconds (Warm-up)
#                14715.3 seconds (Sampling)
#                24680.9 seconds (Total)


#  Elapsed Time: 10802.2 seconds (Warm-up)
#                15037.5 seconds (Sampling)
#                25839.8 seconds (Total)


#  Elapsed Time: 15029 seconds (Warm-up)
#                22712.5 seconds (Sampling)
#                37741.5 seconds (Total)

N 1000 
p 2 
m 10 
blocksize 1 
spline_dim 0 
calculate_lower_bound: T1 -2026 T2 -694.6948 
 a_sigma 5.01 b_sigma 0.4017264
calculate_lower_bound: T1 -1292.377 T2 -671.4252 
Iteration  2 : lower bound  -1963.803  difference  756.8922  parameters  vmu 1.963662 0.9790854 0.0978112 -0.2707565 0.5458152 0.2604943 0.05153962 -0.008141049 -0.3491036 0.4204114 -0.5798342 -0.1680789 diag(mLambda) 0.008182921 0.0004054174 0.008994089 0.009360081 0.008774072 0.008867557 0.009022609 0.009051792 0.009444632 0.008775104 0.009815839 0.009272608 a_rho 535.7401 b_rho 466.2599
dim(mLambda) 12 12 a_sigma 5.01 b_sigma 0.6129129
calculate_lower_bound: T1 -1292.019 T2 -671.4144 
Iteration  3 : lower bound  -1963.434  difference  0.3690308  parameters  vmu 1.954316 0.991449 0.1029046 -0.2746891 0.5555662 0.2666984 0.05446951 -0.005641055 -0.3555457 0.4299303 -0.6047538 -0.1687004 diag(mLambda) 0.01240043 0.0004082747 0.0132155 0.01359657 0.01299138 0.01308667 0.01324566 0.0132756 0.01368607 0.0129918 0.01409845 0.01350327 a_rho 535.7954 b_rho 466.2046
dim(mLambda) 12 12 a_sigma 5.01 b_sigma 0.6639774
calculate_lower_bound: T1 -1292.039 T2 -671.3839 
Iteration  4 : lower bound  -1963.423  difference  0.010887  parameters  vmu 1.954092 0.9915511 0.1032759 -0.2749603 0.556252 0.267189 0.0547918 -0.005405884 -0.3559827 0.430653 -0.6068526 -0.1687012 diag(mLambda) 0.01341974 0.0004082869 0.01423532 0.01461772 0.01401077 0.01410626 0.01426555 0.01429561 0.01470766 0.01401116 0.01512409 0.01452391 a_rho 535.8077 b_rho 466.1923
dim(mLambda) 12 12 a_sigma 5.01 b_sigma 0.6714603
calculate_lower_bound: T1 -1292.042 T2 -671.3798 
Iteration  5 : lower bound  -1963.422  difference  0.001150686  parameters  vmu 1.954051 0.9915789 0.1033257 -0.275008 0.5563498 0.2672565 0.05483346 -0.005376275 -0.3560475 0.4307541 -0.6071196 -0.1687064 diag(mLambda) 0.0135691 0.0004082924 0.01438476 0.01476736 0.01416015 0.01425566 0.01441501 0.01444508 0.01485735 0.01416054 0.0152743 0.01467347 a_rho 535.8093 b_rho 466.1907
dim(mLambda) 12 12 a_sigma 5.01 b_sigma 0.6725305
calculate_lower_bound: T1 -1292.042 T2 -671.3793 
Iteration  6 : lower bound  -1963.421  difference  0.0001552098  parameters  vmu 1.954046 0.9915827 0.1033326 -0.275015 0.5563635 0.267266 0.0548392 -0.005372217 -0.3560568 0.4307683 -0.607156 -0.1687073 diag(mLambda) 0.01359047 0.0004082931 0.01440613 0.01478876 0.01418151 0.01427703 0.01443638 0.01446646 0.01487876 0.0141819 0.01529577 0.01469485 a_rho 535.8096 b_rho 466.1904
dim(mLambda) 12 12 a_sigma 5.01 b_sigma 0.6726822
calculate_lower_bound: T1 -1292.042 T2 -671.3792 
Iteration  7 : lower bound  -1963.421  difference  2.181485e-05  parameters  vmu 1.954045 0.9915833 0.1033336 -0.275016 0.5563654 0.2672673 0.05484001 -0.005371647 -0.3560581 0.4307703 -0.6071611 -0.1687074 diag(mLambda) 0.01359349 0.0004082932 0.01440916 0.01479179 0.01418454 0.01428006 0.01443941 0.01446949 0.01488179 0.01418493 0.01529882 0.01469789 a_rho 535.8096 b_rho 466.1904
dim(mLambda) 12 12 a_sigma 5.01 b_sigma 0.6727037
calculate_lower_bound: T1 -1292.042 T2 -671.3792 
Iteration  8 : lower bound  -1963.421  difference  3.083134e-06  parameters  vmu 1.954045 0.9915833 0.1033338 -0.2750161 0.5563657 0.2672675 0.05484012 -0.005371566 -0.3560583 0.4307706 -0.6071618 -0.1687074 diag(mLambda) 0.01359392 0.0004082932 0.01440959 0.01479222 0.01418497 0.01428049 0.01443984 0.01446992 0.01488222 0.01418536 0.01529925 0.01469832 a_rho 535.8096 b_rho 466.1904
dim(mLambda) 12 12 a_sigma 5.01 b_sigma 0.6727067
calculate_lower_bound: T1 -1292.042 T2 -671.3792 
Iteration  9 : lower bound  -1963.421  difference  4.360868e-07  parameters  vmu 1.954045 0.9915833 0.1033338 -0.2750161 0.5563657 0.2672675 0.05484014 -0.005371555 -0.3560584 0.4307706 -0.607162 -0.1687074 diag(mLambda) 0.01359398 0.0004082932 0.01440965 0.01479228 0.01418503 0.01428055 0.0144399 0.01446998 0.01488228 0.01418542 0.01529931 0.01469838 a_rho 535.8096 b_rho 466.1904
dim(mLambda) 12 12 a_sigma 5.01 b_sigma 0.6727071
calculate_lower_bound: T1 -1292.042 T2 -671.3792 
Iteration  10 : lower bound  -1963.421  difference  6.166715e-08  parameters  vmu 1.954045 0.9915833 0.1033338 -0.2750161 0.5563657 0.2672675 0.05484014 -0.005371553 -0.3560584 0.4307706 -0.607162 -0.1687074 diag(mLambda) 0.01359399 0.0004082932 0.01440966 0.01479229 0.01418504 0.01428056 0.01443991 0.01446998 0.01488229 0.01418542 0.01529932 0.01469838 a_rho 535.8096 b_rho 466.1904
dim(mLambda) 12 12 a_sigma 5.01 b_sigma 0.6727072
calculate_lower_bound: T1 -1292.042 T2 -671.3792 
Iteration  11 : lower bound  -1963.421  difference  8.722509e-09  parameters  vmu 1.954045 0.9915833 0.1033338 -0.2750161 0.5563657 0.2672675 0.05484014 -0.005371553 -0.3560584 0.4307706 -0.607162 -0.1687074 diag(mLambda) 0.01359399 0.0004082932 0.01440966 0.01479229 0.01418504 0.01428056 0.01443991 0.01446999 0.01488229 0.01418543 0.01529932 0.01469839 a_rho 535.8096 b_rho 466.1904
dim(mLambda) 12 12 a_sigma 5.01 b_sigma 0.6727072
calculate_lower_bound: T1 -1292.042 T2 -671.3792 
Iteration  12 : lower bound  -1963.421  difference  1.185526e-09  parameters  vmu 1.954045 0.9915833 0.1033338 -0.2750161 0.5563657 0.2672675 0.05484014 -0.005371553 -0.3560584 0.4307706 -0.607162 -0.1687074 diag(mLambda) 0.01359399 0.0004082932 0.01440966 0.01479229 0.01418504 0.01428056 0.01443991 0.01446999 0.01488229 0.01418543 0.01529932 0.01469839 a_rho 535.8096 b_rho 466.1904
dim(mLambda) 12 12 a_sigma 5.01 b_sigma 0.6727072
calculate_lower_bound: T1 -1292.042 T2 -671.3792 
Iteration  13 : lower bound  -1963.421  difference  1.875833e-10  parameters  vmu 1.954045 0.9915833 0.1033338 -0.2750161 0.5563657 0.2672675 0.05484014 -0.005371553 -0.3560584 0.4307706 -0.607162 -0.1687074 diag(mLambda) 0.01359399 0.0004082932 0.01440966 0.01479229 0.01418504 0.01428056 0.01443991 0.01446999 0.01488229 0.01418543 0.01529932 0.01469839 a_rho 535.8096 b_rho 466.1904
dim(mLambda) 12 12 a_sigma 5.01 b_sigma 0.6727072
calculate_lower_bound: T1 -1292.042 T2 -671.3792 
Iteration  14 : lower bound  -1963.421  difference  4.479261e-11  parameters  vmu 1.954045 0.9915833 0.1033338 -0.2750161 0.5563657 0.2672675 0.05484014 -0.005371553 -0.3560584 0.4307706 -0.607162 -0.1687074 diag(mLambda) 0.01359399 0.0004082932 0.01440966 0.01479229 0.01418504 0.01428056 0.01443991 0.01446999 0.01488229 0.01418543 0.01529932 0.01469839 a_rho 535.8096 b_rho 466.1904
dim(mLambda) 12 12 a_sigma 5.01 b_sigma 0.6727072
calculate_lower_bound: T1 -1292.042 T2 -671.3792 
Iteration  15 : lower bound  -1963.421  difference  2.455636e-11  parameters  vmu 1.954045 0.9915833 0.1033338 -0.2750161 0.5563657 0.2672675 0.05484014 -0.005371553 -0.3560584 0.4307706 -0.607162 -0.1687074 diag(mLambda) 0.01359399 0.0004082932 0.01440966 0.01479229 0.01418504 0.01428056 0.01443991 0.01446999 0.01488229 0.01418543 0.01529932 0.01469839 a_rho 535.8096 b_rho 466.1904
dim(mLambda) 12 12 a_sigma 5.01 b_sigma 0.6727072
calculate_lower_bound: T1 -1292.042 T2 -671.3792 
Iteration  16 : lower bound  -1963.421  difference  1.273293e-11  parameters  vmu 1.954045 0.9915833 0.1033338 -0.2750161 0.5563657 0.2672675 0.05484014 -0.005371553 -0.3560584 0.4307706 -0.607162 -0.1687074 diag(mLambda) 0.01359399 0.0004082932 0.01440966 0.01479229 0.01418504 0.01428056 0.01443991 0.01446999 0.01488229 0.01418543 0.01529932 0.01469839 a_rho 535.8096 b_rho 466.1904
dim(mLambda) 12 12 a_sigma 5.01 b_sigma 0.6727072
calculate_lower_bound: T1 -1292.042 T2 -671.3792 
Iteration  17 : lower bound  -1963.421  difference  6.139089e-12  parameters  vmu 1.954045 0.9915833 0.1033338 -0.2750161 0.5563657 0.2672675 0.05484014 -0.005371553 -0.3560584 0.4307706 -0.607162 -0.1687074 diag(mLambda) 0.01359399 0.0004082932 0.01440966 0.01479229 0.01418504 0.01428056 0.01443991 0.01446999 0.01488229 0.01418543 0.01529932 0.01469839 a_rho 535.8096 b_rho 466.1904
dim(mLambda) 12 12 a_sigma 5.01 b_sigma 0.6727072
calculate_lower_bound: T1 -1292.042 T2 -671.3792 
Iteration  18 : lower bound  -1963.421  difference  1.136868e-12  parameters  vmu 1.954045 0.9915833 0.1033338 -0.2750161 0.5563657 0.2672675 0.05484014 -0.005371553 -0.3560584 0.4307706 -0.607162 -0.1687074 diag(mLambda) 0.01359399 0.0004082932 0.01440966 0.01479229 0.01418504 0.01428056 0.01443991 0.01446999 0.01488229 0.01418543 0.01529932 0.01469839 a_rho 535.8096 b_rho 466.1904
dim(mLambda) 12 12 a_sigma 5.01 b_sigma 0.6727072
calculate_lower_bound: T1 -1292.042 T2 -671.3792 
Iteration  19 : lower bound  -1963.421  difference  4.3201e-12  parameters  vmu 1.954045 0.9915833 0.1033338 -0.2750161 0.5563657 0.2672675 0.05484014 -0.005371553 -0.3560584 0.4307706 -0.607162 -0.1687074 diag(mLambda) 0.01359399 0.0004082932 0.01440966 0.01479229 0.01418504 0.01428056 0.01443991 0.01446999 0.01488229 0.01418543 0.01529932 0.01469839 a_rho 535.8096 b_rho 466.1904
dim(mLambda) 12 12 a_sigma 5.01 b_sigma 0.6727072
calculate_lower_bound: T1 -1292.042 T2 -671.3792 
Iteration  20 : lower bound  -1963.421  difference  -1.364242e-12  parameters  vmu 1.954045 0.9915833 0.1033338 -0.2750161 0.5563657 0.2672675 0.05484014 -0.005371553 -0.3560584 0.4307706 -0.607162 -0.1687074 diag(mLambda) 0.01359399 0.0004082932 0.01440966 0.01479229 0.01418504 0.01428056 0.01443991 0.01446999 0.01488229 0.01418543 0.01529932 0.01469839 a_rho 535.8096 b_rho 466.1904
dim(mLambda) 12 12 a_sigma 5.01 b_sigma 0.6727072

dim(params$mLambda) 12 12[1] 1000   10
[1] 2000000      10
$var_result
$var_result$vmu
           [,1]
1   1.954044911
2   0.991583340
1   0.103333783
2  -0.275016123
3   0.556365733
4   0.267267514
5   0.054840139
6  -0.005371553
7  -0.356058363
8   0.430770632
9  -0.607161968
10 -0.168707421

$var_result$mLambda
               1             2             1             2             3
1   0.0135939930 -1.268801e-04 -1.344821e-02 -1.339831e-02 -1.348995e-02
2  -0.0001268801  4.082932e-04  5.435410e-06  2.162981e-07  4.635365e-05
1  -0.0134482150  5.435410e-06  1.440966e-02  1.329145e-02  1.336875e-02
2  -0.0133983057  2.162981e-07  1.329145e-02  1.479229e-02  1.332015e-02
3  -0.0134899476  4.635365e-05  1.336875e-02  1.332015e-02  1.418504e-02
4  -0.0134601023 -8.808675e-06  1.335542e-02  1.330757e-02  1.338335e-02
5  -0.0134381028 -1.501241e-05  1.333542e-02  1.328772e-02  1.336269e-02
6  -0.0134347727 -1.346883e-05  1.333166e-02  1.328396e-02  1.335908e-02
7  -0.0133850782 -5.862567e-06  1.328012e-02  1.323251e-02  1.330819e-02
8  -0.0134768844  6.571134e-06  1.336753e-02  1.331944e-02  1.339703e-02
9  -0.0133309843 -1.089013e-05  1.322794e-02  1.318058e-02  1.325539e-02
10 -0.0134086751 -4.550915e-06  1.330314e-02  1.325543e-02  1.333139e-02
               4             5             6             7             8
1  -1.346010e-02 -1.343810e-02 -1.343477e-02 -1.338508e-02 -1.347688e-02
2  -8.808675e-06 -1.501241e-05 -1.346883e-05 -5.862567e-06  6.571134e-06
1   1.335542e-02  1.333542e-02  1.333166e-02  1.328012e-02  1.336753e-02
2   1.330757e-02  1.328772e-02  1.328396e-02  1.323251e-02  1.331944e-02
3   1.338335e-02  1.336269e-02  1.335908e-02  1.330819e-02  1.339703e-02
4   1.428056e-02  1.335212e-02  1.334831e-02  1.329644e-02  1.338352e-02
5   1.335212e-02  1.443991e-02  1.332861e-02  1.327670e-02  1.336346e-02
6   1.334831e-02  1.332861e-02  1.446999e-02  1.327292e-02  1.335970e-02
7   1.329644e-02  1.327670e-02  1.327292e-02  1.488229e-02  1.330807e-02
8   1.338352e-02  1.336346e-02  1.335970e-02  1.330807e-02  1.418543e-02
9   1.324437e-02  1.322479e-02  1.322100e-02  1.316958e-02  1.325577e-02
10  1.331944e-02  1.329965e-02  1.329587e-02  1.324428e-02  1.333114e-02
               9            10
1  -1.333098e-02 -1.340868e-02
2  -1.089013e-05 -4.550915e-06
1   1.322794e-02  1.330314e-02
2   1.318058e-02  1.325543e-02
3   1.325539e-02  1.333139e-02
4   1.324437e-02  1.331944e-02
5   1.322479e-02  1.329965e-02
6   1.322100e-02  1.329587e-02
7   1.316958e-02  1.324428e-02
8   1.325577e-02  1.333114e-02
9   1.529932e-02  1.319236e-02
10  1.319236e-02  1.469839e-02

$var_result$a_rho
[1] 535.8096

$var_result$b_rho
[1] 466.1904

$var_result$a_sigma
[1] 5.01

$var_result$b_sigma
[1] 0.6727072

$var_result$vlower_bound
 [1] -2720.695 -1963.803 -1963.434 -1963.423 -1963.422 -1963.421 -1963.421
 [8] -1963.421 -1963.421 -1963.421 -1963.421 -1963.421 -1963.421 -1963.421
[15] -1963.421 -1963.421 -1963.421 -1963.421 -1963.421 -1963.421


$vbeta_accuracy
[1] 0.9552267 0.7898488

$vu_accuracy
 [1] 0.9537607 0.9464600 0.9545889 0.9544692 0.9522091 0.9533737 0.9499700
 [8] 0.9505550 0.9381767 0.9519851

$sigma2_u_accuracy
[1] 0.9611518

$rho_accuracy
[1] 0.8928871

N 1000 
p 2 
m 10 
blocksize 1 
spline_dim 0 
calculate_lower_bound: T1 -2028.114 T2 -694.6948 
 a_sigma 5.01 b_sigma 0.4021572
calculate_lower_bound: T1 -1291.51 T2 -671.3833 
Iteration  2 : lower bound  -1962.893  difference  759.9156  parameters  vmu 1.962374 0.9792032 0.09804628 -0.271136 0.5462734 0.260819 0.05161972 -0.007982957 -0.349344 0.4206782 -0.580637 -0.1681792 diag(mLambda) 0.008345141 0.0007848576 0.009751666 0.01068527 0.009349619 0.009541576 0.009934071 0.009849952 0.01047129 0.009707982 0.01134583 0.01021656 a_rho 535.7525 b_rho 466.2475
dim(mLambda) 12 12 a_sigma 5.01 b_sigma 0.618793
calculate_lower_bound: T1 -1291.191 T2 -671.3684 
Iteration  3 : lower bound  -1962.559  difference  0.3338264  parameters  vmu 1.952977 0.9916037 0.1031862 -0.2751283 0.5561182 0.2670882 0.0545831 -0.005455854 -0.3558515 0.4302884 -0.605775 -0.1688124 diag(mLambda) 0.01266465 0.0007799726 0.01408576 0.01504975 0.0136744 0.01387143 0.01427217 0.01418735 0.01483065 0.01403715 0.0157486 0.01456478 a_rho 535.8096 b_rho 466.1904
dim(mLambda) 12 12 a_sigma 5.01 b_sigma 0.6707585
calculate_lower_bound: T1 -1291.213 T2 -671.3378 
Iteration  4 : lower bound  -1962.551  difference  0.008393656  parameters  vmu 1.952748 0.9917083 0.1035605 -0.2754005 0.556807 0.2675816 0.05490768 -0.005218188 -0.3562893 0.4310139 -0.6078897 -0.1688118 diag(mLambda) 0.01370201 0.0007799684 0.01512503 0.01609349 0.01471246 0.01491006 0.01531198 0.01522708 0.01587368 0.01507579 0.01679854 0.01560607 a_rho 535.8219 b_rho 466.1781
dim(mLambda) 12 12 a_sigma 5.01 b_sigma 0.6783614
calculate_lower_bound: T1 -1291.216 T2 -671.3338 
Iteration  5 : lower bound  -1962.55  difference  0.0007783043  parameters  vmu 1.952707 0.9917362 0.1036104 -0.2754481 0.5569049 0.2676493 0.0549495 -0.005188351 -0.3563539 0.431115 -0.6081575 -0.1688167 diag(mLambda) 0.01385374 0.0007799658 0.01527702 0.01624608 0.01486429 0.01506197 0.01546405 0.01537913 0.01602618 0.01522769 0.01695197 0.01575833 a_rho 535.8236 b_rho 466.1764
dim(mLambda) 12 12 a_sigma 5.01 b_sigma 0.679446
calculate_lower_bound: T1 -1291.217 T2 -671.3332 
Iteration  6 : lower bound  -1962.55  difference  0.0001029738  parameters  vmu 1.952701 0.99174 0.1036186 -0.2754538 0.5569198 0.26766 0.0549565 -0.005183023 -0.356362 0.4311304 -0.6081928 -0.1688164 diag(mLambda) 0.01387538 0.000779965 0.0152987 0.01626785 0.01488593 0.01508363 0.01548574 0.01540082 0.01604794 0.01524935 0.01697388 0.01578005 a_rho 535.8238 b_rho 466.1762
dim(mLambda) 12 12 a_sigma 5.01 b_sigma 0.6795994
calculate_lower_bound: T1 -1291.217 T2 -671.3331 
Iteration  7 : lower bound  -1962.55  difference  1.427679e-05  parameters  vmu 1.952701 0.9917405 0.1036183 -0.2754561 0.5569205 0.2676601 0.05495606 -0.005183703 -0.3563645 0.4311311 -0.6081991 -0.1688177 diag(mLambda) 0.01387845 0.0007799647 0.01530177 0.01627092 0.014889 0.0150867 0.0154888 0.01540389 0.01605101 0.01525242 0.01697694 0.01578312 a_rho 535.8238 b_rho 466.1762
dim(mLambda) 12 12 a_sigma 5.01 b_sigma 0.679621
calculate_lower_bound: T1 -1291.217 T2 -671.3331 
Iteration  8 : lower bound  -1962.55  difference  1.999176e-06  parameters  vmu 1.952701 0.9917406 0.1036185 -0.2754562 0.5569207 0.2676602 0.05495617 -0.005183626 -0.3563647 0.4311314 -0.6081998 -0.1688178 diag(mLambda) 0.01387886 0.0007799649 0.01530218 0.01627134 0.01488941 0.01508711 0.01548922 0.0154043 0.01605142 0.01525283 0.01697736 0.01578353 a_rho 535.8238 b_rho 466.1762
dim(mLambda) 12 12 a_sigma 5.01 b_sigma 0.6796239
calculate_lower_bound: T1 -1291.217 T2 -671.3331 
Iteration  9 : lower bound  -1962.55  difference  2.899048e-07  parameters  vmu 1.952701 0.9917406 0.1036185 -0.2754562 0.5569208 0.2676602 0.05495617 -0.005183631 -0.3563647 0.4311314 -0.6081999 -0.1688178 diag(mLambda) 0.01387894 0.0007799654 0.01530226 0.01627141 0.01488949 0.01508719 0.01548929 0.01540438 0.0160515 0.01525291 0.01697744 0.01578361 a_rho 535.8238 b_rho 466.1762
dim(mLambda) 12 12 a_sigma 5.01 b_sigma 0.6796244
calculate_lower_bound: T1 -1291.217 T2 -671.3331 
Iteration  10 : lower bound  -1962.55  difference  1.813305e-08  parameters  vmu 1.952701 0.9917406 0.1036185 -0.2754562 0.5569208 0.2676603 0.0549562 -0.005183597 -0.3563647 0.4311315 -0.6081999 -0.1688178 diag(mLambda) 0.01387895 0.0007799653 0.01530227 0.01627143 0.01488951 0.0150872 0.01548931 0.01540439 0.01605152 0.01525293 0.01697745 0.01578363 a_rho 535.8238 b_rho 466.1762
dim(mLambda) 12 12 a_sigma 5.01 b_sigma 0.6796245
calculate_lower_bound: T1 -1291.217 T2 -671.3331 
Iteration  11 : lower bound  -1962.55  difference  4.277604e-08  parameters  vmu 1.952701 0.9917406 0.1036184 -0.2754563 0.5569207 0.2676602 0.05495614 -0.005183662 -0.3563648 0.4311314 -0.6081999 -0.1688178 diag(mLambda) 0.01387896 0.0007799654 0.01530228 0.01627143 0.01488951 0.01508721 0.01548932 0.0154044 0.01605152 0.01525293 0.01697746 0.01578363 a_rho 535.8238 b_rho 466.1762
dim(mLambda) 12 12 a_sigma 5.01 b_sigma 0.6796246
calculate_lower_bound: T1 -1291.217 T2 -671.3331 
Iteration  12 : lower bound  -1962.55  difference  -7.612471e-10  parameters  vmu 1.952701 0.9917406 0.1036186 -0.2754561 0.5569209 0.2676604 0.05495627 -0.005183528 -0.3563646 0.4311315 -0.6081998 -0.1688177 diag(mLambda) 0.01387896 0.0007799652 0.01530228 0.01627144 0.01488951 0.01508721 0.01548932 0.0154044 0.01605152 0.01525293 0.01697746 0.01578363 a_rho 535.8238 b_rho 466.1762
dim(mLambda) 12 12 a_sigma 5.01 b_sigma 0.6796246

dim(params$mLambda) 12 12[1] 1000   10
[1] 2000000      10
$var_result
$var_result$vmu
 [1]  1.952700784  0.991740596  0.103618561 -0.275456134  0.556920862
 [6]  0.267660355  0.054956272 -0.005183528 -0.356364624  0.431131546
[11] -0.608199817 -0.168817687

$var_result$mLambda
               [,1]          [,2]          [,3]          [,4]          [,5]
 [1,]  0.0138789580 -2.472535e-04 -1.361663e-02 -1.347854e-02 -1.368880e-02
 [2,] -0.0002472535  7.799652e-04  2.340143e-05 -2.353845e-05  8.208137e-05
 [3,] -0.0136166258  2.340143e-05  1.530228e-02  1.329829e-02  1.347578e-02
 [4,] -0.0134785423 -2.353845e-05  1.329829e-02  1.627144e-02  1.334887e-02
 [5,] -0.0136887970  8.208137e-05  1.347578e-02  1.334887e-02  1.488951e-02
 [6,] -0.0136287838 -2.464498e-05  1.344676e-02  1.332650e-02  1.349784e-02
 [7,] -0.0135755173 -3.142847e-05  1.339615e-02  1.327676e-02  1.344652e-02
 [8,] -0.0135820367 -4.550121e-05  1.340656e-02  1.328791e-02  1.345591e-02
 [9,] -0.0135041738 -3.100456e-05  1.332568e-02  1.320690e-02  1.337580e-02
[10,] -0.0136447046  8.842123e-05  1.343051e-02  1.330362e-02  1.349002e-02
[11,] -0.0133829344 -4.323795e-05  1.320957e-02  1.309258e-02  1.325832e-02
[12,] -0.0135496175  5.432024e-06  1.336019e-02  1.323892e-02  1.341319e-02
               [,6]          [,7]          [,8]          [,9]         [,10]
 [1,] -1.362878e-02 -1.357552e-02 -1.358204e-02 -1.350417e-02 -1.364470e-02
 [2,] -2.464498e-05 -3.142847e-05 -4.550121e-05 -3.100456e-05  8.842123e-05
 [3,]  1.344676e-02  1.339615e-02  1.340656e-02  1.332568e-02  1.343051e-02
 [4,]  1.332650e-02  1.327676e-02  1.328791e-02  1.320690e-02  1.330362e-02
 [5,]  1.349784e-02  1.344652e-02  1.345591e-02  1.337580e-02  1.349002e-02
 [6,]  1.508721e-02  1.342505e-02  1.343634e-02  1.335441e-02  1.345209e-02
 [7,]  1.342505e-02  1.548932e-02  1.338638e-02  1.330462e-02  1.340088e-02
 [8,]  1.343634e-02  1.338638e-02  1.540440e-02  1.331593e-02  1.341012e-02
 [9,]  1.335441e-02  1.330462e-02  1.331593e-02  1.605152e-02  1.333040e-02
[10,]  1.345209e-02  1.340088e-02  1.341012e-02  1.333040e-02  1.525293e-02
[11,]  1.323883e-02  1.318958e-02  1.320102e-02  1.312017e-02  1.321322e-02
[12,]  1.338675e-02  1.333652e-02  1.334720e-02  1.326635e-02  1.336798e-02
              [,11]         [,12]
 [1,] -1.338293e-02 -1.354962e-02
 [2,] -4.323795e-05  5.432024e-06
 [3,]  1.320957e-02  1.336019e-02
 [4,]  1.309258e-02  1.323892e-02
 [5,]  1.325832e-02  1.341319e-02
 [6,]  1.323883e-02  1.338675e-02
 [7,]  1.318958e-02  1.333652e-02
 [8,]  1.320102e-02  1.334720e-02
 [9,]  1.312017e-02  1.326635e-02
[10,]  1.321322e-02  1.336798e-02
[11,]  1.697746e-02  1.315105e-02
[12,]  1.315105e-02  1.578363e-02

$var_result$a_rho
[1] 535.8238

$var_result$b_rho
[1] 466.1762

$var_result$a_sigma
[1] 5.01

$var_result$b_sigma
[1] 0.6796246

$var_result$vlower_bound
 [1] -2722.808 -1962.893 -1962.559 -1962.551 -1962.550 -1962.550 -1962.550
 [8] -1962.550 -1962.550 -1962.550 -1962.550 -1962.550


$vbeta_accuracy
[1] 0.9608668 0.8781323

$vu_accuracy
 [1] 0.9659272 0.9666478 0.9642332 0.9656638 0.9662443 0.9661014 0.9657398
 [8] 0.9653875 0.9601303 0.9667572

$sigma2_u_accuracy
[1] 0.962611

$rho_accuracy
[1] 0.8932379

N 1000 
p 2 
m 10 
blocksize 1 
spline_dim 0 
calculate_lower_bound: T1 -2028.114 T2 -694.6948 
 a_sigma 5.01 b_sigma 0.4021572
calculate_lower_bound: T1 -1291.724 T2 -671.5295 
Iteration  2 : lower bound  -1963.254  difference  759.5545  parameters  vmu 1.964807 0.9773784 0.09611921 -0.2744033 0.5434733 0.2590216 0.04761107 -0.01222782 -0.3525352 0.4220835 -0.5757448 -0.1687623 diag(mLambda) 0.007421188 0.000971338 0.00820926 0.009748237 0.008530535 0.008605469 0.009115392 0.00907559 0.009736839 0.00936059 0.01007606 0.007919033 a_rho 535.6997 b_rho 466.3003
dim(mLambda) 12 12 a_sigma 5.01 b_sigma 0.6110916
calculate_lower_bound: T1 -1291.596 T2 -671.4811 
Iteration  3 : lower bound  -1963.077  difference  0.1769767  parameters  vmu 1.954241 0.9896276 0.1030323 -0.2744736 0.5561265 0.2665003 0.05512701 -0.0050374 -0.355989 0.4294632 -0.6049725 -0.1687797 diag(mLambda) 0.01310651 0.0007997978 0.01507341 0.01613791 0.01417608 0.01437027 0.01450639 0.01410147 0.01475007 0.01233232 0.01414453 0.01154609 a_rho 535.7744 b_rho 466.2256
dim(mLambda) 12 12 a_sigma 5.01 b_sigma 0.6680493
calculate_lower_bound: T1 -1291.45 T2 -671.3889 
Iteration  4 : lower bound  -1962.839  difference  0.23791  parameters  vmu 1.953488 0.9905626 0.103417 -0.2752275 0.557064 0.2673413 0.05491915 -0.005223192 -0.3560479 0.4315367 -0.6090753 -0.168493 diag(mLambda) 0.01399921 0.0008125948 0.01578702 0.01569668 0.01673469 0.01563517 0.01553929 0.01529409 0.01650306 0.01235906 0.01779307 0.0139677 a_rho 535.808 b_rho 466.192
dim(mLambda) 12 12 a_sigma 5.01 b_sigma 0.6794734
calculate_lower_bound: T1 -1291.793 T2 -671.3592 
Iteration  5 : lower bound  -1963.153  difference  -0.3135464  parameters  vmu 1.952906 0.9913755 0.1038731 -0.2766424 0.5577816 0.2673951 0.05434424 -0.005669598 -0.3563775 0.4314227 -0.6049153 -0.1691604 diag(mLambda) 0.01481992 0.0007876942 0.01361042 0.01988935 0.01441467 0.01365378 0.01650702 0.01647007 0.01637349 0.01815985 0.01223706 0.01421636 a_rho 535.8116 b_rho 466.1884
dim(mLambda) 12 12 a_sigma 5.01 b_sigma 0.6780634

dim(params$mLambda) 12 12[1] 1000   10
[1] 2000000      10
$var_result
$var_result$vmu
 [1]  1.952905614  0.991375505  0.103873119 -0.276642354  0.557781625
 [6]  0.267395052  0.054344239 -0.005669598 -0.356377470  0.431422729
[11] -0.604915342 -0.169160448

$var_result$mLambda
               1             2             1             2             3
1   0.0148199153 -2.213408e-04 -1.348568e-02 -1.593554e-02 -1.413248e-02
2  -0.0002213408  7.876942e-04 -2.460495e-05 -4.172862e-05  3.911994e-05
1  -0.0134856809 -2.460495e-05  1.361042e-02  1.454500e-02  1.289744e-02
2  -0.0159355404 -4.172862e-05  1.454500e-02  1.988935e-02  1.521610e-02
3  -0.0141324809  3.911994e-05  1.289744e-02  1.521610e-02  1.441467e-02
4  -0.0136666002 -4.886139e-05  1.249468e-02  1.474126e-02  1.307977e-02
5  -0.0149250748 -6.503385e-05  1.364399e-02  1.609607e-02  1.428534e-02
6  -0.0149026715 -6.240019e-05  1.362356e-02  1.607204e-02  1.426368e-02
7  -0.0145675499 -4.954454e-05  1.330457e-02  1.569269e-02  1.393740e-02
8  -0.0159032846 -2.833290e-05  1.453162e-02  1.714392e-02  1.521408e-02
9  -0.0121800662 -5.032188e-05  1.111137e-02  1.310049e-02  1.165071e-02
10 -0.0136343254 -4.573003e-05  1.244580e-02  1.467428e-02  1.304392e-02
               4             5             6             7             8
1  -1.366660e-02 -1.492507e-02 -1.490267e-02 -1.456755e-02 -0.0159032846
2  -4.886139e-05 -6.503385e-05 -6.240019e-05 -4.954454e-05 -0.0000283329
1   1.249468e-02  1.364399e-02  1.362356e-02  1.330457e-02  0.0145316240
2   1.474126e-02  1.609607e-02  1.607204e-02  1.569269e-02  0.0171439186
3   1.307977e-02  1.428534e-02  1.426368e-02  1.393740e-02  0.0152140840
4   1.365378e-02  1.385957e-02  1.383818e-02  1.352203e-02  0.0147554832
5   1.385957e-02  1.650702e-02  1.510508e-02  1.476131e-02  0.0161050967
6   1.383818e-02  1.510508e-02  1.647007e-02  1.474755e-02  0.0160847308
7   1.352203e-02  1.476131e-02  1.474755e-02  1.637349e-02  0.0157460264
8   1.475548e-02  1.610510e-02  1.608473e-02  1.574603e-02  0.0181598451
9   1.130674e-02  1.234525e-02  1.233947e-02  1.208093e-02  0.0131378353
10  1.265553e-02  1.381540e-02  1.380534e-02  1.351483e-02  0.0146820559
               9            10
1  -1.218007e-02 -1.363433e-02
2  -5.032188e-05 -4.573003e-05
1   1.111137e-02  1.244580e-02
2   1.310049e-02  1.467428e-02
3   1.165071e-02  1.304392e-02
4   1.130674e-02  1.265553e-02
5   1.234525e-02  1.381540e-02
6   1.233947e-02  1.380534e-02
7   1.208093e-02  1.351483e-02
8   1.313784e-02  1.468206e-02
9   1.223706e-02  1.147825e-02
10  1.147825e-02  1.421636e-02

$var_result$a_rho
[1] 535.8116

$var_result$b_rho
[1] 466.1884

$var_result$a_sigma
[1] 5.01

$var_result$b_sigma
[1] 0.6780634

$var_result$vlower_bound
[1] -2722.808 -1963.254 -1963.077 -1962.839 -1963.153


$vbeta_accuracy
[1] 0.9699360 0.8735247

$vu_accuracy
 [1] 0.9416693 0.9701039 0.9585455 0.9449621 0.9772686 0.9777695 0.9695510
 [8] 0.9716904 0.8870774 0.9446586

$sigma2_u_accuracy
[1] 0.9624558

$rho_accuracy
[1] 0.892936

N 1000 
p 2 
m 10 
blocksize 1 
spline_dim 0 
calculate_lower_bound: T1 -2028.945 T2 -694.6948 
 a_sigma 5.01 b_sigma 0.3989696
calculate_lower_bound: T1 -1291.696 T2 -671.401 
Iteration  2 : lower bound  -1963.097  difference  760.5421  parameters  vmu 1.965669 0.979063 0.09442332 -0.2747033 0.542624 0.2571206 0.04802363 -0.01156716 -0.3528428 0.417023 -0.582931 -0.1716433 diag(mLambda) 0.007666632 0.000919176 0.008581932 0.009689759 0.00803983 0.008007128 0.008681609 0.008616145 0.009447996 0.008559519 0.01005002 0.009073609 a_rho 535.7457 b_rho 466.2543
dim(mLambda) 12 12 a_sigma 5.01 b_sigma 0.6118967
calculate_lower_bound: T1 -1291.236 T2 -671.3825 
Iteration  3 : lower bound  -1962.618  difference  0.4791499  parameters  vmu 1.953405 0.9914994 0.102597 -0.2754407 0.5553214 0.2666447 0.05400438 -0.005996955 -0.3562167 0.4296749 -0.6055465 -0.1692693 diag(mLambda) 0.01317275 0.0007338613 0.01424462 0.01550268 0.01361148 0.01397596 0.01444122 0.01433357 0.01516597 0.01420316 0.01613963 0.01485062 a_rho 535.8045 b_rho 466.1955
dim(mLambda) 12 12 a_sigma 5.01 b_sigma 0.671073
calculate_lower_bound: T1 -1291.236 T2 -671.3374 
Iteration  4 : lower bound  -1962.574  difference  0.04445233  parameters  vmu 1.952551 0.9917357 0.103665 -0.2752149 0.5568775 0.2676569 0.05502987 -0.005107767 -0.3561336 0.431101 -0.6076995 -0.1686846 diag(mLambda) 0.01373745 0.0007784245 0.01502415 0.01604689 0.01452426 0.01476685 0.01511798 0.01505765 0.01583971 0.01496584 0.01684275 0.01562715 a_rho 535.822 b_rho 466.178
dim(mLambda) 12 12 a_sigma 5.01 b_sigma 0.6777712
calculate_lower_bound: T1 -1291.225 T2 -671.3344 
Iteration  5 : lower bound  -1962.559  difference  0.01440161  parameters  vmu 1.952724 0.9917803 0.1035984 -0.2756125 0.5568023 0.2677168 0.05491262 -0.005244593 -0.3562707 0.431085 -0.6081224 -0.1688046 diag(mLambda) 0.01415476 0.0007439588 0.01550401 0.01669308 0.01501048 0.0153323 0.01577233 0.01570065 0.01634434 0.0154433 0.01720723 0.01609735 a_rho 535.8234 b_rho 466.1766
dim(mLambda) 12 12 a_sigma 5.01 b_sigma 0.6808074
calculate_lower_bound: T1 -1291.223 T2 -671.3266 
Iteration  6 : lower bound  -1962.549  difference  0.0103041  parameters  vmu 1.95262 0.9917179 0.1036839 -0.2753715 0.5569935 0.2677958 0.05506856 -0.005065679 -0.3564022 0.4312529 -0.6086165 -0.1686465 diag(mLambda) 0.01382855 0.0007616525 0.01524705 0.01610514 0.01479863 0.01506663 0.01543394 0.01533006 0.01596312 0.01519526 0.01702875 0.01581882 a_rho 535.8265 b_rho 466.1735
dim(mLambda) 12 12 a_sigma 5.01 b_sigma 0.6797195
calculate_lower_bound: T1 -1291.216 T2 -671.3334 
Iteration  7 : lower bound  -1962.55  difference  -0.0007610368  parameters  vmu 1.952699 0.991748 0.1036169 -0.2754601 0.5569171 0.2676509 0.05495743 -0.005186067 -0.3563697 0.4311319 -0.6081873 -0.1688172 diag(mLambda) 0.01389258 0.0007798522 0.01531286 0.01628334 0.01488587 0.01508894 0.01550229 0.01541498 0.01606659 0.01526175 0.01698107 0.0157922 a_rho 535.8237 b_rho 466.1763
dim(mLambda) 12 12 a_sigma 5.01 b_sigma 0.6796553

dim(params$mLambda) 12 12[1] 1000   10
[1] 2000000      10
Time difference of 17.1154 secs
$var_result
$var_result$vmu
 [1]  1.952699418  0.991748044  0.103616880 -0.275460138  0.556917056
 [6]  0.267650874  0.054957433 -0.005186067 -0.356369740  0.431131864
[11] -0.608187255 -0.168817162

$var_result$mLambda
               1             2             1             2             3
1   0.0138925778 -2.465094e-04 -0.0136272839 -1.349159e-02 -1.368259e-02
2  -0.0002465094  7.798522e-04  0.0000232732 -2.495875e-05  8.380256e-05
1  -0.0136272839  2.327320e-05  0.0153128617  1.330845e-02  1.346611e-02
2  -0.0134915929 -2.495875e-05  0.0133084507  1.628334e-02  1.334186e-02
3  -0.0136825920  8.380256e-05  0.0134661086  1.334186e-02  1.488587e-02
4  -0.0136324047 -2.317569e-05  0.0134467751  1.332929e-02  1.348069e-02
5  -0.0135885237 -3.207047e-05  0.0134060192  1.328944e-02  1.343914e-02
6  -0.0135936413 -4.580009e-05  0.0134149336  1.329912e-02  1.344701e-02
7  -0.0135184281 -3.236052e-05  0.0133369934  1.322104e-02  1.336991e-02
8  -0.0136535544  8.814851e-05  0.0134362557  1.331201e-02  1.347878e-02
9  -0.0133924058 -4.528629e-05  0.0132163899  1.310230e-02  1.324798e-02
10 -0.0135610942  4.225849e-06  0.0133687481  1.325026e-02  1.340458e-02
               4             5             6             7             8
1  -1.363240e-02 -1.358852e-02 -1.359364e-02 -1.351843e-02 -1.365355e-02
2  -2.317569e-05 -3.207047e-05 -4.580009e-05 -3.236052e-05  8.814851e-05
1   1.344678e-02  1.340602e-02  1.341493e-02  1.333699e-02  1.343626e-02
2   1.332929e-02  1.328944e-02  1.329912e-02  1.322104e-02  1.331201e-02
3   1.348069e-02  1.343914e-02  1.344701e-02  1.336991e-02  1.347878e-02
4   1.508894e-02  1.342742e-02  1.343717e-02  1.335831e-02  1.345054e-02
5   1.342742e-02  1.550229e-02  1.339724e-02  1.331846e-02  1.340902e-02
6   1.343717e-02  1.339724e-02  1.541498e-02  1.332830e-02  1.341680e-02
7   1.335831e-02  1.331846e-02  1.332830e-02  1.606659e-02  1.333995e-02
8   1.345054e-02  1.340902e-02  1.341680e-02  1.333995e-02  1.526175e-02
9   1.323831e-02  1.319897e-02  1.320894e-02  1.313105e-02  1.321822e-02
10  1.338793e-02  1.334757e-02  1.335678e-02  1.327886e-02  1.337476e-02
               9            10
1  -1.339241e-02 -1.356109e-02
2  -4.528629e-05  4.225849e-06
1   1.321639e-02  1.336875e-02
2   1.310230e-02  1.325026e-02
3   1.324798e-02  1.340458e-02
4   1.323831e-02  1.338793e-02
5   1.319897e-02  1.334757e-02
6   1.320894e-02  1.335678e-02
7   1.313105e-02  1.327886e-02
8   1.321822e-02  1.337476e-02
9   1.698107e-02  1.315910e-02
10  1.315910e-02  1.579220e-02

$var_result$a_rho
[1] 535.8237

$var_result$b_rho
[1] 466.1763

$var_result$a_sigma
[1] 5.01

$var_result$b_sigma
[1] 0.6796553

$var_result$vlower_bound
[1] -2723.640 -1963.097 -1962.618 -1962.574 -1962.559 -1962.549 -1962.550


$vbeta_accuracy
[1] 0.9610462 0.8782288

$vu_accuracy
 [1] 0.9660514 0.9667891 0.9641863 0.9656814 0.9664013 0.9662358 0.9659224
 [8] 0.9654964 0.9601520 0.9668617

$sigma2_u_accuracy
[1] 0.9626134

$rho_accuracy
[1] 0.8932353

N 1000 
p 2 
m 10 
blocksize 1 
spline_dim 0 
calculate_lower_bound: T1 -2028.114 T2 -694.6948 
 a_sigma 5.01 b_sigma 0.4021572
calculate_lower_bound: T1 -1291.51 T2 -671.3834 
Iteration  2 : lower bound  -1962.893  difference  759.9154  parameters  vmu 1.962375 0.9792059 0.09804533 -0.2711371 0.5462723 0.2608184 0.05161829 -0.00798362 -0.3493428 0.4206764 -0.5806303 -0.1681794 diag(mLambda) 0.008340977 0.0007848335 0.0097478 0.01068178 0.009345563 0.009537691 0.009930362 0.009846196 0.01046772 0.009704055 0.01134267 0.01021311 a_rho 535.7525 b_rho 466.2475
dim(mLambda) 12 12 a_sigma 5.01 b_sigma 0.6187689
calculate_lower_bound: T1 -1291.191 T2 -671.3684 
Iteration  3 : lower bound  -1962.559  difference  0.333952  parameters  vmu 1.952977 0.9916037 0.1031861 -0.2751281 0.5561179 0.267088 0.05458295 -0.005455953 -0.3558512 0.4302881 -0.605774 -0.1688124 diag(mLambda) 0.01266418 0.0007799738 0.01408528 0.01504927 0.01367392 0.01387096 0.01427168 0.01418687 0.01483017 0.01403667 0.01574813 0.0145643 a_rho 535.8096 b_rho 466.1904
dim(mLambda) 12 12 a_sigma 5.01 b_sigma 0.670755
calculate_lower_bound: T1 -1291.213 T2 -671.3378 
Iteration  4 : lower bound  -1962.551  difference  0.008398575  parameters  vmu 1.952748 0.9917083 0.1035605 -0.2754005 0.556807 0.2675816 0.0549077 -0.005218166 -0.3562892 0.4310138 -0.6078895 -0.1688117 diag(mLambda) 0.01370191 0.0007799684 0.01512493 0.01609339 0.01471236 0.01490996 0.01531188 0.01522698 0.01587359 0.01507568 0.01679844 0.01560597 a_rho 535.8219 b_rho 466.1781
dim(mLambda) 12 12 a_sigma 5.01 b_sigma 0.6783607
calculate_lower_bound: T1 -1291.216 T2 -671.3338 
Iteration  5 : lower bound  -1962.55  difference  0.0007785714  parameters  vmu 1.952707 0.9917362 0.1036104 -0.2754481 0.5569049 0.2676493 0.0549495 -0.005188358 -0.3563539 0.431115 -0.6081575 -0.1688168 diag(mLambda) 0.01385373 0.0007799658 0.01527701 0.01624607 0.01486427 0.01506195 0.01546403 0.01537912 0.01602617 0.01522767 0.01695195 0.01575832 a_rho 535.8236 b_rho 466.1764
dim(mLambda) 12 12 a_sigma 5.01 b_sigma 0.6794459
calculate_lower_bound: T1 -1291.217 T2 -671.3332 
Iteration  6 : lower bound  -1962.55  difference  0.0001029003  parameters  vmu 1.952702 0.99174 0.1036173 -0.2754551 0.5569185 0.2676587 0.05495524 -0.005184283 -0.3563632 0.4311291 -0.608194 -0.1688176 diag(mLambda) 0.01387539 0.0007799655 0.01529871 0.01626785 0.01488594 0.01508364 0.01548574 0.01540082 0.01604794 0.01524936 0.01697385 0.01578005 a_rho 535.8238 b_rho 466.1762
dim(mLambda) 12 12 a_sigma 5.01 b_sigma 0.6795993
calculate_lower_bound: T1 -1291.217 T2 -671.3331 
Iteration  7 : lower bound  -1962.55  difference  1.438611e-05  parameters  vmu 1.952701 0.9917405 0.1036183 -0.2754561 0.5569205 0.26766 0.05495605 -0.005183713 -0.3563645 0.4311311 -0.6081991 -0.1688178 diag(mLambda) 0.01387845 0.0007799654 0.01530177 0.01627093 0.01488901 0.0150867 0.01548881 0.01540389 0.01605102 0.01525243 0.01697695 0.01578313 a_rho 535.8238 b_rho 466.1762
dim(mLambda) 12 12 a_sigma 5.01 b_sigma 0.679621
calculate_lower_bound: T1 -1291.217 T2 -671.3331 
Iteration  8 : lower bound  -1962.55  difference  2.027529e-06  parameters  vmu 1.952701 0.9917406 0.1036184 -0.2754562 0.5569207 0.2676602 0.05495616 -0.005183632 -0.3563647 0.4311314 -0.6081998 -0.1688178 diag(mLambda) 0.01387889 0.0007799654 0.01530221 0.01627136 0.01488944 0.01508714 0.01548924 0.01540433 0.01605145 0.01525286 0.01697738 0.01578356 a_rho 535.8238 b_rho 466.1762
dim(mLambda) 12 12 a_sigma 5.01 b_sigma 0.6796241
calculate_lower_bound: T1 -1291.217 T2 -671.3331 
Iteration  9 : lower bound  -1962.55  difference  2.860884e-07  parameters  vmu 1.952701 0.9917406 0.1036185 -0.2754562 0.5569208 0.2676603 0.05495618 -0.005183621 -0.3563647 0.4311314 -0.6081999 -0.1688178 diag(mLambda) 0.01387895 0.0007799654 0.01530227 0.01627142 0.0148895 0.0150872 0.01548931 0.01540439 0.01605151 0.01525292 0.01697745 0.01578362 a_rho 535.8238 b_rho 466.1762
dim(mLambda) 12 12 a_sigma 5.01 b_sigma 0.6796245
calculate_lower_bound: T1 -1291.217 T2 -671.3331 
Iteration  10 : lower bound  -1962.55  difference  4.036451e-08  parameters  vmu 1.952701 0.9917406 0.1036185 -0.2754562 0.5569208 0.2676603 0.05495618 -0.005183619 -0.3563647 0.4311315 -0.6081999 -0.1688178 diag(mLambda) 0.01387896 0.0007799654 0.01530228 0.01627143 0.01488951 0.01508721 0.01548931 0.0154044 0.01605152 0.01525293 0.01697746 0.01578363 a_rho 535.8238 b_rho 466.1762
dim(mLambda) 12 12 a_sigma 5.01 b_sigma 0.6796246
calculate_lower_bound: T1 -1291.217 T2 -671.3331 
Iteration  11 : lower bound  -1962.55  difference  5.695483e-09  parameters  vmu 1.952701 0.9917406 0.1036185 -0.2754562 0.5569208 0.2676603 0.05495618 -0.005183619 -0.3563647 0.4311315 -0.6081999 -0.1688178 diag(mLambda) 0.01387896 0.0007799654 0.01530228 0.01627143 0.01488951 0.01508721 0.01548932 0.0154044 0.01605152 0.01525293 0.01697746 0.01578363 a_rho 535.8238 b_rho 466.1762
dim(mLambda) 12 12 a_sigma 5.01 b_sigma 0.6796246
calculate_lower_bound: T1 -1291.217 T2 -671.3331 
Iteration  12 : lower bound  -1962.55  difference  7.989911e-10  parameters  vmu 1.952701 0.9917406 0.1036185 -0.2754562 0.5569208 0.2676603 0.05495618 -0.005183619 -0.3563647 0.4311315 -0.6081999 -0.1688178 diag(mLambda) 0.01387896 0.0007799654 0.01530228 0.01627143 0.01488951 0.01508721 0.01548932 0.0154044 0.01605152 0.01525293 0.01697746 0.01578363 a_rho 535.8238 b_rho 466.1762
dim(mLambda) 12 12 a_sigma 5.01 b_sigma 0.6796246
calculate_lower_bound: T1 -1291.217 T2 -671.3331 
Iteration  13 : lower bound  -1962.55  difference  1.157332e-10  parameters  vmu 1.952701 0.9917406 0.1036185 -0.2754562 0.5569208 0.2676603 0.05495618 -0.005183619 -0.3563647 0.4311315 -0.6081999 -0.1688178 diag(mLambda) 0.01387896 0.0007799654 0.01530228 0.01627143 0.01488951 0.01508721 0.01548932 0.0154044 0.01605152 0.01525293 0.01697746 0.01578363 a_rho 535.8238 b_rho 466.1762
dim(mLambda) 12 12 a_sigma 5.01 b_sigma 0.6796246
calculate_lower_bound: T1 -1291.217 T2 -671.3331 
Iteration  14 : lower bound  -1962.55  difference  2.228262e-11  parameters  vmu 1.952701 0.9917406 0.1036185 -0.2754562 0.5569208 0.2676603 0.05495618 -0.005183619 -0.3563647 0.4311315 -0.6081999 -0.1688178 diag(mLambda) 0.01387896 0.0007799654 0.01530228 0.01627143 0.01488951 0.01508721 0.01548932 0.0154044 0.01605152 0.01525293 0.01697746 0.01578363 a_rho 535.8238 b_rho 466.1762
dim(mLambda) 12 12 a_sigma 5.01 b_sigma 0.6796246
calculate_lower_bound: T1 -1291.217 T2 -671.3331 
Iteration  15 : lower bound  -1962.55  difference  -3.637979e-12  parameters  vmu 1.952701 0.9917406 0.1036185 -0.2754562 0.5569208 0.2676603 0.05495618 -0.005183619 -0.3563647 0.4311315 -0.6081999 -0.1688178 diag(mLambda) 0.01387896 0.0007799654 0.01530228 0.01627143 0.01488951 0.01508721 0.01548932 0.0154044 0.01605152 0.01525293 0.01697746 0.01578363 a_rho 535.8238 b_rho 466.1762
dim(mLambda) 12 12 a_sigma 5.01 b_sigma 0.6796246

dim(params$mLambda) 12 12[1] 1000   10
[1] 2000000      10
$var_result
$var_result$vmu
              [,1]
 [1,]  1.952700884
 [2,]  0.991740612
 [3,]  0.103618470
 [4,] -0.275456226
 [5,]  0.556920769
 [6,]  0.267660264
 [7,]  0.054956181
 [8,] -0.005183619
 [9,] -0.356364715
[10,]  0.431131454
[11,] -0.608199909
[12,] -0.168817779

$var_result$mLambda
               [,1]          [,2]          [,3]          [,4]          [,5]
 [1,]  0.0138789574 -2.472521e-04 -1.361663e-02 -1.347854e-02 -1.368880e-02
 [2,] -0.0002472521  7.799654e-04  2.339999e-05 -2.353988e-05  8.208005e-05
 [3,] -0.0136166251  2.339999e-05  1.530228e-02  1.329829e-02  1.347578e-02
 [4,] -0.0134785412 -2.353988e-05  1.329829e-02  1.627143e-02  1.334887e-02
 [5,] -0.0136887960  8.208005e-05  1.347578e-02  1.334887e-02  1.488951e-02
 [6,] -0.0136287829 -2.464638e-05  1.344676e-02  1.332650e-02  1.349784e-02
 [7,] -0.0135755165 -3.142996e-05  1.339615e-02  1.327676e-02  1.344652e-02
 [8,] -0.0135820359 -4.550268e-05  1.340656e-02  1.328791e-02  1.345591e-02
 [9,] -0.0135041729 -3.100603e-05  1.332568e-02  1.320690e-02  1.337580e-02
[10,] -0.0136447039  8.841982e-05  1.343051e-02  1.330362e-02  1.349001e-02
[11,] -0.0133829322 -4.323902e-05  1.320957e-02  1.309258e-02  1.325832e-02
[12,] -0.0135496168  5.430549e-06  1.336019e-02  1.323892e-02  1.341319e-02
               [,6]          [,7]          [,8]          [,9]         [,10]
 [1,] -1.362878e-02 -1.357552e-02 -1.358204e-02 -1.350417e-02 -1.364470e-02
 [2,] -2.464638e-05 -3.142996e-05 -4.550268e-05 -3.100603e-05  8.841982e-05
 [3,]  1.344676e-02  1.339615e-02  1.340656e-02  1.332568e-02  1.343051e-02
 [4,]  1.332650e-02  1.327676e-02  1.328791e-02  1.320690e-02  1.330362e-02
 [5,]  1.349784e-02  1.344652e-02  1.345591e-02  1.337580e-02  1.349001e-02
 [6,]  1.508721e-02  1.342505e-02  1.343634e-02  1.335441e-02  1.345208e-02
 [7,]  1.342505e-02  1.548932e-02  1.338638e-02  1.330462e-02  1.340088e-02
 [8,]  1.343634e-02  1.338638e-02  1.540440e-02  1.331593e-02  1.341012e-02
 [9,]  1.335441e-02  1.330462e-02  1.331593e-02  1.605152e-02  1.333040e-02
[10,]  1.345208e-02  1.340088e-02  1.341012e-02  1.333040e-02  1.525293e-02
[11,]  1.323882e-02  1.318958e-02  1.320102e-02  1.312017e-02  1.321322e-02
[12,]  1.338674e-02  1.333652e-02  1.334720e-02  1.326635e-02  1.336798e-02
              [,11]         [,12]
 [1,] -1.338293e-02 -1.354962e-02
 [2,] -4.323902e-05  5.430549e-06
 [3,]  1.320957e-02  1.336019e-02
 [4,]  1.309258e-02  1.323892e-02
 [5,]  1.325832e-02  1.341319e-02
 [6,]  1.323882e-02  1.338674e-02
 [7,]  1.318958e-02  1.333652e-02
 [8,]  1.320102e-02  1.334720e-02
 [9,]  1.312017e-02  1.326635e-02
[10,]  1.321322e-02  1.336798e-02
[11,]  1.697746e-02  1.315105e-02
[12,]  1.315105e-02  1.578363e-02

$var_result$a_rho
[1] 535.8238

$var_result$b_rho
[1] 466.1762

$var_result$a_sigma
[1] 5.01

$var_result$b_sigma
[1] 0.6796246

$var_result$vlower_bound
 [1] -2722.808 -1962.893 -1962.559 -1962.551 -1962.550 -1962.550 -1962.550
 [8] -1962.550 -1962.550 -1962.550 -1962.550 -1962.550 -1962.550 -1962.550
[15] -1962.550


$vbeta_accuracy
[1] 0.9608667 0.8781325

$vu_accuracy
 [1] 0.9659272 0.9666478 0.9642332 0.9656637 0.9662443 0.9661013 0.9657398
 [8] 0.9653874 0.9601304 0.9667572

$sigma2_u_accuracy
[1] 0.962611

$rho_accuracy
[1] 0.8932379

> 
> test_accuracies_slope = function()
+ {
+   #set.seed(1)
+   #mult = generate_slope_test_data()
+   # Monte Carlo Markov Chains approximation
+   #mcmc_samples = mcmc_approximation(mult, iterations=1e6, mc.cores = 32)
+   #save(mult, mcmc_samples, file="accuracy_slope.RData")  
+   load(file="accuracy_slope.RData")
+   
+   now = Sys.time()
+   var1 = test_accuracy(mult, mcmc_samples, "laplacian")
+   print(Sys.time() - now)
+   #print(image(Matrix(var1$var_result$mLambda)))
+   print(var1)
+   
+   now = Sys.time()
+   var2 = test_accuracy(mult, mcmc_samples, "gva")
+   print(Sys.time() - now)
+   #print(image(Matrix(var2$var_result$mLambda)))
+   print(var2)
+   
+   now = Sys.time()
+   var3 = test_accuracy(mult, mcmc_samples, "gva2")
+   print(Sys.time() - now)
+   #print(image(Matrix(var3$var_result$mLambda)))
+   print(var3)
+ 
+   now = Sys.time()
+   var4 = test_accuracy(mult, mcmc_samples, "gva2new")
+   print(Sys.time() - now)
+   #print(image(Matrix(var4$var_result$mLambda)))  
+   print(var4)
+   
+   #Rprof()
+   now = Sys.time()
+   # GVA NR is unstable, and sometimes fails with an error
+   var5 = tryCatch(test_accuracy(mult, mcmc_samples, "gva_nr"),
+ 					error = function (E) { return(NULL) })
+   print(Sys.time() - now)
+   #print(image(Matrix(var5$var_result$mLambda)))  
+   print(var5)
+   
+   save(var1, var2, var3, var4, var5, file="accuracy_results_slope.RData")
+   
+   #Rprof(NULL)
+   #summaryRprof()
+   #print(image(Matrix(var3_new$mLambda)))
+   
+   #now = Sys.time()
+   #var4 = test_accuracy(mult, mcmc_samples, "gva_nr")
+   #Sys.time() - now
+   #print(image(Matrix(var4$mLambda)))
+ 
+ #   mult = generate_spline_test_data()
+ #   mcmc_samples = mcmc_approximation(mult, iterations=1e4)
+ #   save(mult, mcmc_samples, file="accuracy_spline.RData")    
+ 
+   #now = Sys.time()
+   #var1 = test_accuracy(mult, mcmc_samples, "laplacian")
+   #Sys.time() - now
+   #print(image(Matrix(var1$var_result$mLambda)))
+   #var1
+   
+   #now = Sys.time()
+   #var2 = test_accuracy(mult, mcmc_samples, "gva")
+   #Sys.time() - now
+   #print(image(Matrix(var2$var_result$mLambda)))
+   #var2
+   
+   #now = Sys.time()
+   #var3 = test_accuracy(mult, mcmc_samples, "gva2")
+   #Sys.time() - now
+   #print(image(Matrix(var3$var_result$mLambda)))
+   #var3
+   
+   #now = Sys.time()
+   #var4 = test_accuracy(mult, mcmc_samples, "gva2new")
+   #Sys.time() - now
+   #print(image(Matrix(var4$var_result$mLambda)))  
+   #var4
+   
+   #Rprof()
+   #now = Sys.time()
+   #var5 = test_accuracy(mult, mcmc_samples, "gva_nr")
+   #print(Sys.time() - now)
+   #print(image(Matrix(var5$var_result$mLambda)))  
+   #var5
+ }
> #test_accuracies_slope()
> 
